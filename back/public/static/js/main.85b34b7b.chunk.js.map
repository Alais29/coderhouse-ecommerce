{"version":3,"sources":["components/Navigation/styles.module.scss","components/Product/styles.module.scss","components/UserData/styles.module.scss","components/LoadingScreen/styles.module.scss","components/SignupForm/styles.module.scss","components/ProductList/styles.module.scss","components/LoadingData/styles.module.scss","components/Modals/EditModal/styles.module.scss","components/Filter/styles.module.scss","components/LoadingScreen/LoadingScreen.tsx","components/Navigation/Navigation.tsx","hooks/redux.ts","components/LoginForm/LoginForm.tsx","services/Login.ts","services/User.ts","features/user/userSlice.ts","pages/Login/Login.tsx","components/SignupForm/SignupForm.tsx","pages/Signup/Signup.tsx","services/Carrito.ts","features/cart/cartSlice.ts","services/Orders.ts","features/orders/ordersSlice.ts","utilities/others.ts","services/Cloudinary.ts","components/Product/Product.tsx","components/ProductCarrito/ProductCarrito.tsx","components/ProductList/ProductList.tsx","components/LoadingData/LoadingData.tsx","pages/Cart/Cart.tsx","services/Productos.ts","features/products/productsSlice.ts","components/Modals/ConfirmationModal/ConfirmationModal.tsx","components/Modals/EditModal/EditModal.tsx","components/Filter/Filter.tsx","pages/Productos/Productos.tsx","features/messages/messagesSlice.ts","components/UserData/UserData.tsx","components/ProductForm/ProductForm.tsx","components/Dashboard/Dashboard.tsx","pages/Account/Account.tsx","services/Socket.ts","components/ChatChannel/ChatChannel.tsx","pages/Chat/Chat.tsx","components/OrderInfo/OrderInfo.tsx","pages/Orders/Orders.tsx","pages/SuccessfulOrder/SuccesfulOrder.tsx","App.tsx","store/index.ts","index.tsx","components/ChatChannel/styles.module.scss","components/ProductCarrito/styles.module.scss"],"names":["module","exports","LoadingScreen","style","className","cx","styles","Spinner","animation","variant","Navigation","Navbar","bg","fixed","expand","collapseOnSelect","Toggle","aria-controls","Collapse","id","Container","Nav","Link","as","to","href","icon","useAppDispatch","useDispatch","useAppSelector","useSelector","LoginForm","onSubmit","useState","email","password","formValues","setFormValues","status","state","user","handleChange","e","target","name","value","handleSubmit","preventDefault","Form","Group","controlId","Label","Control","type","onChange","Button","disabled","baseUrl","loginUser","data","a","axios","post","response","logoutUser","get","Error","message","signupUser","userData","userSignUp","createAsyncThunk","userLogin","userLogout","getUserData","userSlice","createSlice","initialState","isLoggedIn","error","reducers","setStatus","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","Login","dispatch","unwrap","toast","SignupForm","location","dataUser","history","useHistory","repeatPassword","nombre","calle","altura","codigoPostal","piso","depto","edad","admin","telefono","setTelefono","fotoRef","useRef","fotoToUpload","current","files","formData","FormData","Object","entries","forEach","formElement","append","undefined","success","dataObj","key","loginData","push","Row","Col","sm","md","placeholder","ref","Check","inline","label","checked","Signup","getCarritoProducts","saveCarritoProduct","editCarritoProduct","productData","put","deleteCarritoProduct","delete","fetchProductsCart","addProductToCart","productId","editProductInCart","removeProductCart","cartSlice","emptyCart","concat","length","productIndex","findIndex","item","producto","quantity","getOrders","saveOrder","fetchOrders","createOrder","ordersSlice","lastOrder","notCompletedOrders","filter","estado","lastNotCompletedOrder","isEmpty","JSON","stringify","cld","Cloudinary","cloud","cloudName","Product","product","handleToggleShowModal","handleAddToCart","productImg","image","fotoId","resize","thumbnail","width","height","Card","cldImg","plugins","lazyload","Body","Title","Subtitle","precio","Text","descripcion","categoria","onClick","ProductCarrito","handleRemove","qtyDisabled","setQtyDisabled","setQuantity","editProductRequestStatus","setEditProductRequestStatus","handleSaveChanges","disableBodyScroll","document","body","amount","enableBodyScroll","backgroundColor","zIndex","src","foto","alt","Number","ProductList","productos","map","LoadingData","Cart","total","setTotal","deleteProductRequestStatus","setDeleteProductRequestStatus","sendOrderRequestStatus","setSendOrderRequestStatus","cart","handleSendOrder","useEffect","totalCost","reduce","toFixed","size","getProducts","query","queryString","queryArray","queryValues","index","saveProduct","newProduct","deleteProduct","updateProduct","fetchProducts","addNewProduct","editProduct","removeProductApi","productsSlice","removeProduct","productToUpdateIndex","indexOf","splice","ConfirmationModal","productToDelete","handleConfirmDelete","deleteRequestStatus","Modal","Header","Footer","EditModal","productToEdit","setProductToEdit","editRequestStatus","setEditRequestStatus","codigo","stock","URL","createObjectURL","editedProduct","set","formDataValues","values","pair","console","log","every","String","info","setTimeout","OverlayTrigger","placement","overlay","Tooltip","color","click","Filter","minPrice","maxPrice","minStock","maxStock","obj","formValuesCopy","parse","notEmptyFields","fromEntries","xs","Floating","htmlFor","Productos","showModal","setShowModal","setProductToDelete","setDeleteRequestStatus","addToCartRequestStatus","setAddToCartRequestStatus","products","prevState","show","onHide","messagesSlice","setMessages","addMessage","UserData","dashboard","handleLogout","profileImg","ProductForm","addRequestStatus","setAddRequestStatus","handleSaveProduct","Dashboard","Tabs","defaultActiveKey","Tab","eventKey","title","Account","socket","socketClient","ChatChannel","savingMessage","setSavingMessage","messages","text","emailRef","chatBoxRef","emit","on","warning","scrollTop","scrollHeight","role","msg","split","moment","date","format","Chat","OrderInfo","order","charAt","toUpperCase","slice","lg","Table","responsive","striped","bordered","hover","colSpan","timestamp","direccionEntrega","Orders","orders","SuccesfulOrder","library","add","fas","App","isLoggedInCookie","cookieName","cookie","el","trim","getCookie","getUserInfo","path","store","configureStore","reducer","productsReducer","cartReducer","userReducer","messagesReducer","ordersReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85b34b7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-icon\":\"styles_cart-icon__Preeq\",\"icons-container\":\"styles_icons-container__3Oykg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-btns\":\"styles_product-btns__KMiLf\",\"product-add-edit\":\"styles_product-add-edit__3EXs6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-data\":\"styles_user-data__SSNPU\",\"user-data__info\":\"styles_user-data__info__BeS3l\",\"user-data__btn-container\":\"styles_user-data__btn-container__2Ip1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-screen\":\"styles_loading-screen__LPC8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup-form\":\"styles_signup-form__1eRgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-list\":\"styles_product-list__1ieW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner-container\":\"styles_spinner-container__2thgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-image\":\"styles_product-image__1hiFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-container\":\"styles_filter-container__3qhrs\"};","import { CSSProperties } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface ILoadingScreen {\n  style?: CSSProperties;\n}\n\nconst LoadingScreen = ({ style = {} }: ILoadingScreen) => {\n  return (\n    <div className={cx(styles['loading-screen'])} style={style}>\n      <Spinner animation=\"grow\" variant=\"primary\" />\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import { Link } from 'react-router-dom';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst Navigation = () => {\n  return (\n    <Navbar\n      bg=\"dark\"\n      variant=\"dark\"\n      fixed=\"top\"\n      expand=\"sm\"\n      collapseOnSelect={true}\n    >\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Container>\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\" href=\"/\">\n              Productos\n            </Nav.Link>\n            <Nav.Link\n              as={Link}\n              href=\"/ordenes\"\n              className=\"nav-link\"\n              to=\"/ordenes\"\n            >\n              Ordenes\n            </Nav.Link>\n            <Nav.Link as={Link} href=\"/chat\" className=\"nav-link\" to=\"/chat\">\n              Chat\n            </Nav.Link>\n            <Link\n              className={cx(\n                'nav-link',\n                'ms-sm-auto',\n                'd-none',\n                'd-sm-block',\n                styles['cart-icon'],\n              )}\n              to=\"/cart\"\n            >\n              <FontAwesomeIcon icon=\"shopping-cart\" />\n            </Link>\n            <Link className=\"nav-link d-none d-sm-block\" to=\"/account\">\n              <FontAwesomeIcon icon=\"user\" />\n            </Link>\n          </Nav>\n        </Container>\n      </Navbar.Collapse>\n      <div className={cx(styles['icons-container'])}>\n        <Nav className={cx('d-sm-none')}>\n          <Link\n            className={cx('nav-link', 'ms-sm-auto', styles['cart-icon'])}\n            to=\"/cart\"\n          >\n            <FontAwesomeIcon icon=\"shopping-cart\" />\n          </Link>\n          <Link className=\"nav-link\" to=\"/account\">\n            <FontAwesomeIcon icon=\"user\" />\n          </Link>\n        </Nav>\n      </div>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useState } from 'react';\nimport { IUser } from 'commons/interfaces';\nimport { Button, Form } from 'react-bootstrap';\nimport { useAppSelector } from 'hooks/redux';\n\ninterface ILoginForm {\n  onSubmit: (data: IUser) => void;\n}\n\nconst LoginForm = ({ onSubmit }: ILoginForm) => {\n  const [formValues, setFormValues] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { status } = useAppSelector(state => state.user);\n\n  const { email, password } = formValues;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(formValues);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={e => handleSubmit(e)}>\n        <Form.Group className=\"mb-3\" controlId=\"nombre\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={email}\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Contraseña</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Button className=\"mb-2\" type=\"submit\" disabled={status === 'loading'}>\n          {status === 'loading' ? 'Procesando...' : 'Login'}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import axios from 'axios';\r\nimport { IUser } from 'commons/interfaces';\r\n\r\nconst baseUrl = '/api/auth';\r\n\r\nexport const loginUser = async (data: IUser) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/login`, data);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw e.response.data;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/logout`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import axios from 'axios';\nimport { IUser } from 'commons/interfaces';\n\nconst baseUrl = '/api/usuarios';\n\nexport const signupUser = async (data: IUser) => {\n  try {\n    const response = await axios.post(`${baseUrl}/signup`, data);\n    return response.data;\n  } catch (e) {\n    throw e.response.data;\n  }\n};\n\nexport const userData = async () => {\n  try {\n    const response = await axios.get(`${baseUrl}/loggedInUser/data`);\n    return response.data;\n  } catch (e) {\n    throw e.response.data;\n  }\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IUser } from 'commons/interfaces';\r\nimport { loginUser, logoutUser } from 'services/Login';\r\nimport { signupUser, userData } from 'services/User';\r\n\r\ninterface UserState {\r\n  data: IUser | null;\r\n  isLoggedIn: boolean;\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  data: null,\r\n  isLoggedIn: false,\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const userSignUp = createAsyncThunk(\r\n  'user/signup',\r\n  async (userData: IUser) => {\r\n    await signupUser(userData);\r\n  },\r\n);\r\n\r\nexport const userLogin = createAsyncThunk(\r\n  'user/login',\r\n  async (userData: IUser) => {\r\n    const response = await loginUser(userData);\r\n    return response.user;\r\n  },\r\n);\r\n\r\nexport const userLogout = createAsyncThunk('user/logout', async () => {\r\n  const response = await logoutUser();\r\n  return response;\r\n});\r\n\r\nexport const getUserData = createAsyncThunk('user/data', async () => {\r\n  const response = await userData();\r\n  return response.data;\r\n});\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(userLogin.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(userLogin.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n        state.isLoggedIn = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(userLogin.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(userLogout.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(userLogout.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.isLoggedIn = false;\r\n        state.error = null;\r\n        state.data = null;\r\n      })\r\n      .addCase(userLogout.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(getUserData.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getUserData.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n        state.status = 'succeeded';\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(getUserData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setStatus } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { IUser } from 'commons/interfaces';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { userLogin } from 'features/user/userSlice';\nimport { useAppDispatch } from 'hooks/redux';\n\nconst Login = () => {\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = async (data: IUser) => {\n    try {\n      await dispatch(userLogin(data)).unwrap();\n    } catch (e) {\n      toast.error(\n        'Hubo un error, por favor verifique su usuario y/o contraseña',\n      );\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"text-center mt-5 pt-3\">Login de Usuario</h1>\n      <LoginForm onSubmit={handleSubmit} />\n      <hr />\n      <div>\n        <span>¿No tienes cuenta?</span>\n        <Link className=\"btn btn-primary ms-2\" to=\"/signup\">\n          Regístrate\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { IObject, IUserFormData } from 'commons/interfaces';\nimport PhoneInput from 'react-phone-number-input';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { userLogin, userSignUp } from 'features/user/userSlice';\n\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface ISignupForm {\n  location: 'dashboard' | 'signupPage';\n}\n\nconst SignupForm = ({ location }: ISignupForm) => {\n  const { data: dataUser } = useAppSelector(state => state.user);\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n\n  const [formValues, setFormValues] = useState({\n    email: '',\n    password: '',\n    repeatPassword: '',\n    nombre: '',\n    calle: '',\n    altura: '',\n    codigoPostal: '',\n    piso: '',\n    depto: '',\n    edad: '',\n    admin: 'false',\n  });\n  const [telefono, setTelefono] = useState();\n  const {\n    email,\n    password,\n    repeatPassword,\n    nombre,\n    calle,\n    altura,\n    codigoPostal,\n    piso,\n    depto,\n    edad,\n    admin,\n  } = formValues;\n\n  const fotoRef = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    let fotoToUpload = null;\n    if (fotoRef.current) fotoToUpload = fotoRef.current.files;\n\n    const formData = new FormData() as IUserFormData;\n    Object.entries(formValues).forEach(formElement => {\n      formData.append(formElement[0], formElement[1]);\n    });\n    formData.append('foto', fotoToUpload ? fotoToUpload[0] : '');\n    formData.append('telefono', telefono || '');\n\n    try {\n      await dispatch(userSignUp(formData)).unwrap();\n      setFormValues({\n        email: '',\n        password: '',\n        repeatPassword: '',\n        nombre: '',\n        calle: '',\n        altura: '',\n        codigoPostal: '',\n        piso: '',\n        depto: '',\n        edad: '',\n        admin: 'false',\n      });\n      setTelefono(undefined);\n      if (fotoRef.current) fotoRef.current.value = '';\n\n      toast.success('¡Registro Exitoso!');\n\n      if (location === 'signupPage') {\n        const dataObj: IObject = {};\n        formData.forEach((value, key) => (dataObj[key] = value));\n\n        const loginData = {\n          email: dataObj.email as string,\n          password: dataObj.password as string,\n        };\n\n        await dispatch(userLogin(loginData)).unwrap();\n        history.push('/account');\n      }\n    } catch (e) {\n      const message =\n        e.message === 'Missing credentials'\n          ? 'Todos los campos son obligatorios'\n          : e.message;\n      toast.error(message);\n    }\n  };\n\n  return (\n    <div className={cx(styles['signup-form'])}>\n      <Form onSubmit={e => handleSubmit(e)}>\n        <Row>\n          <Col sm=\"12\" md=\"6\">\n            <Form.Group className=\"mb-3\" controlId=\"nombreSignup\">\n              <Form.Label>Nombre Completo</Form.Label>\n              <Form.Control\n                type=\"nombre\"\n                value={nombre}\n                name=\"nombre\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"edad\">\n              <Form.Label>Edad</Form.Label>\n              <Form.Control\n                type=\"edad\"\n                value={edad}\n                name=\"edad\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={email}\n                name=\"email\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                name=\"password\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n              <Form.Label>Repite tu contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={repeatPassword}\n                name=\"repeatPassword\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"telefono\">\n              <Form.Label>Teléfono</Form.Label>\n              <PhoneInput\n                placeholder=\"Enter phone number\"\n                value={telefono}\n                name=\"telefono\"\n                onChange={setTelefono as (value?: unknown) => void}\n              />\n            </Form.Group>\n          </Col>\n          <Col sm=\"12\" md=\"6\">\n            <Form.Group className=\"mb-3\" controlId=\"calle\">\n              <Form.Label>Calle</Form.Label>\n              <Form.Control\n                type=\"calle\"\n                value={calle}\n                name=\"calle\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"altura\">\n              <Form.Label>Altura</Form.Label>\n              <Form.Control\n                type=\"altura\"\n                value={altura}\n                name=\"altura\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"codigoPostal\">\n              <Form.Label>Código Postal</Form.Label>\n              <Form.Control\n                type=\"codigoPostal\"\n                value={codigoPostal}\n                name=\"codigoPostal\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"piso\">\n              <Form.Label>Piso (opcional)</Form.Label>\n              <Form.Control\n                type=\"piso\"\n                value={piso}\n                name=\"piso\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"depto\">\n              <Form.Label>Departamento (opcional)</Form.Label>\n              <Form.Control\n                type=\"depto\"\n                value={depto}\n                name=\"depto\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"fotoSignup\" className=\"mb-3\">\n              <Form.Label>Foto</Form.Label>\n              <Form.Control type=\"file\" ref={fotoRef} name=\"foto\" />\n            </Form.Group>\n          </Col>\n        </Row>\n        {dataUser && dataUser.admin && (\n          <Form.Group controlId=\"foto\" className=\"mb-3\">\n            <p>¿Administrador?</p>\n            <div key={`inline-radio`} className=\"mb-3\">\n              <Form.Check\n                inline\n                label=\"Si\"\n                name=\"admin\"\n                type=\"radio\"\n                id={`inline-radio-1`}\n                value=\"true\"\n                onChange={handleChange}\n                checked={admin === 'true'}\n              />\n              <Form.Check\n                inline\n                label=\"No\"\n                name=\"admin\"\n                type=\"radio\"\n                id={`inline-radio-2`}\n                value=\"false\"\n                onChange={handleChange}\n                checked={admin === 'false'}\n              />\n            </div>\n          </Form.Group>\n        )}\n        <Button className=\"mb-2\" type=\"submit\">\n          Registro\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import { Link } from 'react-router-dom';\nimport SignupForm from 'components/SignupForm/SignupForm';\n\nconst Signup = () => {\n  return (\n    <div>\n      <h1 className=\"text-center mt-5 pt-3\">Registro de Usuario</h1>\n      <SignupForm location=\"signupPage\" />\n      <hr />\n      <div className=\"mb-3\">\n        <span>¿Ya tienes cuenta?</span>\n        <Link className=\"btn btn-primary ms-2\" to=\"/login\">\n          Login\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/carrito';\r\n\r\nexport const getCarritoProducts = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const saveCarritoProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const editCarritoProduct = async (productData: {\r\n  productId: string;\r\n  amount: string | number;\r\n}) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}`, productData);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const deleteCarritoProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IItemCarrito } from 'commons/interfaces';\r\nimport {\r\n  getCarritoProducts,\r\n  saveCarritoProduct,\r\n  editCarritoProduct,\r\n  deleteCarritoProduct,\r\n} from 'services/Carrito';\r\n\r\ninterface CartState {\r\n  data: IItemCarrito[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: CartState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchProductsCart = createAsyncThunk(\r\n  'cart/fetchProductsCart',\r\n  async () => {\r\n    const response = await getCarritoProducts();\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const addProductToCart = createAsyncThunk(\r\n  'cart/addProductToCart',\r\n  async (productId: string) => {\r\n    const response = await saveCarritoProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const editProductInCart = createAsyncThunk(\r\n  'cart/editProductInCart',\r\n  async (productData: { productId: string; amount: string | number }) => {\r\n    const response = await editCarritoProduct(productData);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const removeProductCart = createAsyncThunk(\r\n  'cart/removeProductCart',\r\n  async (productId: string) => {\r\n    const response = await deleteCarritoProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    emptyCart(state) {\r\n      state.data = [];\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchProductsCart.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductsCart.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = state.data.concat(action.payload);\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProductsCart.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(removeProductCart.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(addProductToCart.fulfilled, (state, action) => {\r\n        if (state.data.length !== 0 || state.status === 'succeeded') {\r\n          const productIndex = state.data.findIndex(\r\n            item => item.producto.id === action.payload.producto.id,\r\n          );\r\n          if (productIndex === -1) {\r\n            state.data = state.data.concat(action.payload);\r\n          } else {\r\n            state.data[productIndex].quantity = action.payload.quantity;\r\n          }\r\n        }\r\n      })\r\n      .addCase(editProductInCart.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { emptyCart } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'api/ordenes';\r\n\r\nexport const getOrders = async () => {\r\n  try {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const saveOrder = async () => {\r\n  try {\r\n    const response = await axios.post(baseUrl);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IOrder } from 'commons/interfaces';\r\nimport { getOrders, saveOrder } from 'services/Orders';\r\n\r\ninterface OrderState {\r\n  data: IOrder[];\r\n  lastOrder: IOrder | null;\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: OrderState = {\r\n  data: [],\r\n  lastOrder: null,\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchOrders = createAsyncThunk(\r\n  'order/fetchOrders',\r\n  async (): Promise<IOrder[]> => {\r\n    const response = await getOrders();\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const createOrder = createAsyncThunk('order/createOrder', async () => {\r\n  const response = await saveOrder();\r\n  return response;\r\n});\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchOrders.pending, state => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchOrders.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n        state.error = null;\r\n\r\n        const notCompletedOrders = action.payload.filter(\r\n          item => item.estado === 'generada',\r\n        );\r\n\r\n        const lastNotCompletedOrder =\r\n          notCompletedOrders[notCompletedOrders.length - 1];\r\n        if (lastNotCompletedOrder) {\r\n          state.lastOrder = lastNotCompletedOrder;\r\n        }\r\n      })\r\n      .addCase(fetchOrders.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(createOrder.fulfilled, (state, action) => {\r\n        state.data.push(action.payload);\r\n        state.lastOrder = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default ordersSlice.reducer;\r\n","import { IObject } from 'commons/interfaces';\r\n\r\n/**\r\n * Checks if an item (string, number, array, object) is empty or not\r\n * @param item\r\n * @returns returns true if empty, or false if not\r\n */\r\n\r\nexport function isEmpty(item: any) {\r\n  if (!!item) {\r\n    switch (typeof item) {\r\n      case 'string':\r\n        if (item !== '' && item !== 'null' && item !== 'undefined') {\r\n          return false;\r\n        }\r\n        return true;\r\n      case 'number':\r\n        return false;\r\n      case 'object':\r\n        if (JSON.stringify(item) === '{}' || JSON.stringify(item) === '[]') {\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get cookie value by name\r\n * @param cookieName name of the cookie to look for\r\n * @returns cookie value\r\n */\r\nexport function getCookie(cookieName: string) {\r\n  let cookie: IObject = {};\r\n  document.cookie.split(';').forEach(function (el) {\r\n    let [key, value] = el.split('=');\r\n    cookie[key.trim()] = value;\r\n  });\r\n  return cookie[cookieName];\r\n}\r\n\r\n/**\r\n *\r\n * @param object\r\n * @returns the object properties that are empty\r\n */\r\nexport const getEmptyFields = (object: IObject): unknown[] => {\r\n  const keysValues = Object.entries(object);\r\n  const empty: unknown[] = [];\r\n\r\n  keysValues.forEach(item => {\r\n    if (isEmpty(item[1])) {\r\n      empty.push(item[0]);\r\n    }\r\n  });\r\n\r\n  return empty;\r\n};\r\n\r\n/**\r\n * Make a copy of an object\r\n * @param obj object to copy\r\n * @returns copy if the object\r\n */\r\nexport const copyObj = (obj: IObject) => {\r\n  return JSON.parse(JSON.stringify(obj));\r\n};\r\n","import { Cloudinary } from '@cloudinary/url-gen';\n\nexport const cld = new Cloudinary({\n  cloud: {\n    cloudName: 'alais29',\n  },\n});\n","import { Button, Card } from 'react-bootstrap';\nimport { AdvancedImage, lazyload, placeholder } from '@cloudinary/react';\nimport { thumbnail } from '@cloudinary/url-gen/actions/resize';\nimport { useAppSelector } from 'hooks/redux';\nimport { IItemAPI } from 'commons/interfaces';\nimport { cld } from 'services/Cloudinary';\n\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IProps {\n  product: IItemAPI;\n  handleToggleShowModal: (\n    producto?: IItemAPI,\n    action?: 'edit' | 'delete',\n  ) => void;\n  handleAddToCart: (producto: IItemAPI) => void;\n}\n\nconst Product = ({\n  product,\n  handleToggleShowModal,\n  handleAddToCart,\n}: IProps) => {\n  const { data } = useAppSelector(state => state.user);\n\n  const productImg = cld.image(`${product.fotoId}`);\n  productImg.resize(thumbnail().width(300).height(300));\n\n  return (\n    <Card>\n      <AdvancedImage\n        cldImg={productImg}\n        plugins={[lazyload(), placeholder('blur')]}\n      />\n      <Card.Body>\n        <div>\n          <Card.Title>{product.nombre}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            ${product.precio}\n          </Card.Subtitle>\n          <Card.Text>{product.descripcion}</Card.Text>\n        </div>\n        <div className=\"text-end mt-2\">\n          <Card.Text>\n            <small>{product.categoria}</small>\n          </Card.Text>\n        </div>\n        <div className={cx('d-flex', 'flex-column', styles['product-btns'])}>\n          {data && data.admin && (\n            <div className={cx('d-flex', 'mt-2', styles['product-add-edit'])}>\n              <Button\n                variant=\"danger\"\n                onClick={() => handleToggleShowModal(product, 'delete')}\n              >\n                Eliminar\n              </Button>\n              <Button\n                variant=\"info\"\n                onClick={() => handleToggleShowModal(product, 'edit')}\n              >\n                Editar\n              </Button>\n            </div>\n          )}\n          <Button variant=\"primary\" onClick={() => handleAddToCart(product)}>\n            Agregar al carrito\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { IItemCarrito } from 'commons/interfaces';\nimport { useAppDispatch } from 'hooks/redux';\nimport { editProductInCart } from 'features/cart/cartSlice';\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IProductCarrito {\n  product: IItemCarrito;\n  handleRemove: (id: string) => void;\n}\n\nconst ProductCarrito = ({ product, handleRemove }: IProductCarrito) => {\n  const [qtyDisabled, setQtyDisabled] = useState(true);\n  const [quantity, setQuantity] = useState<number | string>(product.quantity);\n  const [editProductRequestStatus, setEditProductRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n\n  const { producto } = product;\n\n  const dispatch = useAppDispatch();\n\n  const handleEdit = () => {\n    setQtyDisabled(false);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuantity(e.target.value);\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      setEditProductRequestStatus('loading');\n      disableBodyScroll(document.body);\n      await dispatch(\n        editProductInCart({ productId: producto.id, amount: quantity }),\n      ).unwrap();\n      setQtyDisabled(true);\n    } catch (e) {\n      toast.error(e.message);\n    } finally {\n      setEditProductRequestStatus('idle');\n      enableBodyScroll(document.body);\n    }\n  };\n\n  return (\n    <>\n      {editProductRequestStatus === 'loading' && (\n        <LoadingScreen\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\n        />\n      )}\n      <div\n        className={cx('border', 'rounded', 'd-flex', styles['product-carrito'])}\n      >\n        <img\n          src={producto.foto}\n          alt={producto.nombre}\n          className={cx(styles['product-carrito__img'])}\n        />\n        <div className={cx(styles['product-carrito__info-container'])}>\n          <div className={cx(styles['product-carrito__info'])}>\n            <h3>{producto.nombre}</h3>\n            <p>{producto.descripcion}</p>\n            <div className={cx(styles['product-carrito__qty-price'])}>\n              <div className={cx(styles['product-carrito__qty-form'])}>\n                <Form>\n                  <Form.Group\n                    className={cx(\n                      'mb-3',\n                      'd-flex',\n                      'align-items-center',\n                      'gap-2',\n                    )}\n                    controlId=\"nombre\"\n                  >\n                    <Form.Label>Cantidad</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={quantity}\n                      name=\"email\"\n                      onChange={handleChange}\n                      disabled={qtyDisabled}\n                    />\n                  </Form.Group>\n                </Form>\n              </div>\n              <p className={cx(styles['product-carrito__price'])}>\n                ${Number(producto.precio) * product.quantity}\n              </p>\n            </div>\n          </div>\n          <div className={cx(styles['product-carrito__btns'])}>\n            <Button variant=\"danger\" onClick={() => handleRemove(producto.id)}>\n              Eliminar\n            </Button>\n            <Button\n              variant={qtyDisabled ? 'primary' : 'success'}\n              onClick={\n                qtyDisabled ? () => handleEdit() : () => handleSaveChanges()\n              }\n            >\n              {qtyDisabled ? 'Editar' : 'Guardar'}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProductCarrito;\n","import { IItemAPI, IItemCarrito } from 'commons/interfaces';\nimport { isEmpty } from 'utilities/others';\nimport Product from 'components/Product/Product';\nimport ProductCarrito from 'components/ProductCarrito/ProductCarrito';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IProductList {\n  productos: IItemAPI[] | IItemCarrito[] | [];\n  handleToggleShowModal?: (\n    producto?: IItemAPI,\n    action?: 'edit' | 'delete',\n  ) => void;\n  handleAddToCart?: (producto: IItemAPI) => void;\n  location: 'home' | 'cart';\n  handleRemove?: (id: string) => void;\n}\n\nconst ProductList = ({\n  handleToggleShowModal,\n  productos,\n  location,\n  handleRemove,\n  handleAddToCart,\n}: IProductList) => {\n  return (\n    <>\n      <div\n        className={cx(\n          styles['product-list'],\n          'my-4',\n          'd-flex',\n          'flex-wrap',\n          'justify-content-center',\n          { 'flex-column': location === 'cart' },\n        )}\n      >\n        {!isEmpty(productos) &&\n          location === 'home' &&\n          handleToggleShowModal &&\n          handleAddToCart &&\n          (productos as IItemAPI[]).map((producto: IItemAPI) => (\n            <Product\n              key={producto.id}\n              product={producto}\n              handleToggleShowModal={handleToggleShowModal}\n              handleAddToCart={handleAddToCart}\n            />\n          ))}\n        {!isEmpty(productos) &&\n          location === 'cart' &&\n          handleRemove &&\n          (productos as IItemCarrito[]).map((producto: IItemCarrito) => (\n            <ProductCarrito\n              key={producto.producto.id}\n              product={producto}\n              handleRemove={handleRemove}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default ProductList;\n","import { Spinner } from 'react-bootstrap';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface ILoadingData {\n  style?: React.CSSProperties;\n}\n\nconst LoadingData = ({ style }: ILoadingData) => {\n  return (\n    <div className={cx(styles['spinner-container'])} style={style}>\n      <Spinner animation=\"grow\" variant=\"primary\" />\n    </div>\n  );\n};\n\nexport default LoadingData;\n","import { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport {\n  fetchProductsCart,\n  removeProductCart,\n  emptyCart,\n} from 'features/cart/cartSlice';\nimport { createOrder } from 'features/orders/ordersSlice';\nimport { isEmpty } from 'utilities/others';\nimport ProductList from 'components/ProductList/ProductList';\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\nimport LoadingData from 'components/LoadingData/LoadingData';\n\nconst Cart = () => {\n  const [total, setTotal] = useState(0);\n  const [deleteProductRequestStatus, setDeleteProductRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n  const [sendOrderRequestStatus, setSendOrderRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n\n  const { data, status, error } = useAppSelector(state => state.cart);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const handleRemove = async (id: string) => {\n    try {\n      setDeleteProductRequestStatus('loading');\n      disableBodyScroll(document.body);\n      await dispatch(removeProductCart(id)).unwrap();\n      toast.success('Producto eliminado del carrito');\n    } catch (e) {\n      toast.error(e.message);\n    } finally {\n      setDeleteProductRequestStatus('idle');\n      enableBodyScroll(document.body);\n    }\n  };\n\n  const handleSendOrder = async () => {\n    try {\n      setSendOrderRequestStatus('loading');\n      await dispatch(createOrder()).unwrap();\n      dispatch(emptyCart());\n      toast.success('Orden enviada con éxito!');\n      history.push('/successful-order');\n    } catch (e) {\n      toast.error(\n        'Hubo un error enviando la orden, por favor intente de nuevo.',\n      );\n    } finally {\n      setSendOrderRequestStatus('idle');\n    }\n  };\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchProductsCart());\n    }\n    if (status === 'failed') {\n      toast.error(error || 'Ocurrió un error');\n    }\n  }, [dispatch, status, error]);\n\n  useEffect(() => {\n    const totalCost = data.reduce((total, item) => {\n      return (total += Number(item.producto.precio) * item.quantity);\n    }, 0);\n    setTotal(totalCost);\n  }, [data]);\n\n  return (\n    <>\n      <h1 className=\"text-center mt-5 pt-3 mb-\">Carrito</h1>\n      <ProductList\n        productos={data}\n        location=\"cart\"\n        handleRemove={handleRemove}\n      />\n      {isEmpty(data) ? (\n        status === 'loading' ? (\n          <LoadingData />\n        ) : (\n          <div className=\"text-center\">\n            <h2>El carrito está vacío</h2>\n            <p className=\"display-6\">Agrega algunos productos</p>\n            <Link to=\"/productos\" className=\"btn btn-primary\">\n              Ir a Productos\n            </Link>\n          </div>\n        )\n      ) : (\n        <div className=\"d-flex justify-content-end gap-3 align-items-center\">\n          <div className=\"border rounded p-3\">\n            <span className=\"fw-bold\">Total:</span> ${total.toFixed(2)}\n          </div>\n          <Button variant=\"primary\" size=\"lg\" onClick={handleSendOrder}>\n            Enviar orden\n          </Button>\n        </div>\n      )}\n      {(deleteProductRequestStatus === 'loading' ||\n        sendOrderRequestStatus === 'loading') && (\n        <LoadingScreen\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import axios from 'axios';\r\nimport { IItem, IItemQuery } from '../commons/interfaces';\r\n\r\nconst baseUrl = '/api/productos';\r\n\r\nexport const getProducts = async (query?: IItemQuery) => {\r\n  try {\r\n    let queryString = '';\r\n    if (query) {\r\n      queryString = '?';\r\n      const queryArray = Object.entries(query);\r\n      queryArray.forEach((queryValues, index) => {\r\n        queryString += `${queryValues[0]}=${queryValues[1]}${\r\n          index !== queryArray.length - 1 ? '&' : ''\r\n        }`;\r\n      });\r\n    } else {\r\n      queryString = '';\r\n    }\r\n    const response = await axios.get(`${baseUrl}${queryString}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const saveProduct = async (newProduct: IItem) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}`, newProduct);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id: string, product: IItem) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/${id}`, product);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IItem, IItemAPI, IItemQuery } from 'commons/interfaces';\r\nimport {\r\n  deleteProduct,\r\n  getProducts,\r\n  saveProduct,\r\n  updateProduct,\r\n} from 'services/Productos';\r\n\r\ninterface ProductsState {\r\n  data: IItemAPI[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: ProductsState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  'products/fetchProducts',\r\n  async (query?: IItemQuery) => {\r\n    const response = await getProducts(query);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const addNewProduct = createAsyncThunk(\r\n  'products/addNewProduct',\r\n  // The payload creator receives the partial product object\r\n  async (product: IItem) => {\r\n    // We send the initial data to the server\r\n    const response = await saveProduct(product);\r\n    // The response includes the complete post object, including unique ID\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const editProduct = createAsyncThunk(\r\n  'products/editProduct',\r\n  async (productData: { id: string; product: IItemAPI }) => {\r\n    const { id, product } = productData;\r\n    const response = await updateProduct(id, product);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const removeProductApi = createAsyncThunk(\r\n  'products/removeProduct',\r\n  async (productId: string) => {\r\n    const response = await deleteProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {\r\n    removeProduct: (state, action) => {\r\n      state.data = state.data.filter(item => item.id !== action.payload);\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        // Add any fetched products to the array\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(addNewProduct.fulfilled, (state, action) => {\r\n        // We can directly add the new product object to our products array\r\n        state.data.push(action.payload);\r\n      })\r\n      .addCase(editProduct.fulfilled, (state, action) => {\r\n        const productToUpdateIndex = state.data\r\n          .map((item: IItemAPI) => item.id)\r\n          .indexOf(action.payload.id);\r\n        state.data.splice(productToUpdateIndex, 1, action.payload);\r\n      });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { removeProduct } = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n","import { Modal, Button, Spinner } from 'react-bootstrap';\nimport { IItemAPI } from 'commons/interfaces';\n\ninterface IConfirmationModal {\n  productToDelete: IItemAPI | null;\n  handleToggleShowModal: () => void;\n  handleConfirmDelete: () => void;\n  deleteRequestStatus: 'idle' | 'loading';\n}\n\nconst ConfirmationModal = ({\n  handleToggleShowModal,\n  productToDelete,\n  handleConfirmDelete,\n  deleteRequestStatus,\n}: IConfirmationModal) => {\n  return (\n    <>\n      <Modal.Header>\n        <Modal.Title>¿Estas seguro?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        ¿Seguro que quieres eliminar {productToDelete?.nombre}?\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => handleToggleShowModal()}\n          disabled={deleteRequestStatus === 'loading'}\n        >\n          Cancelar\n        </Button>\n        <Button\n          variant=\"danger\"\n          onClick={handleConfirmDelete}\n          disabled={deleteRequestStatus === 'loading'}\n        >\n          Eliminar{' '}\n          {deleteRequestStatus === 'loading' && (\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\n          )}\n        </Button>\n      </Modal.Footer>\n    </>\n  );\n};\n\nexport default ConfirmationModal;\n","import { useState, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IItemAPI, IItemAPIFormData } from 'commons/interfaces';\nimport { useAppDispatch } from 'hooks/redux';\nimport { editProduct } from 'features/products/productsSlice';\nimport {\n  Button,\n  Form,\n  Modal,\n  OverlayTrigger,\n  Spinner,\n  Tooltip,\n} from 'react-bootstrap';\n\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IEditModal {\n  productToEdit: IItemAPI;\n  handleToggleShowModal: () => void;\n  setProductToEdit: React.Dispatch<React.SetStateAction<IItemAPI | null>>;\n}\n\nconst EditModal = ({\n  handleToggleShowModal,\n  productToEdit,\n  setProductToEdit,\n}: IEditModal) => {\n  const [editRequestStatus, setEditRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n  const [formValues, setFormValues] = useState({\n    codigo: productToEdit.codigo,\n    nombre: productToEdit.nombre,\n    categoria: productToEdit.categoria,\n    descripcion: productToEdit.descripcion,\n    precio: productToEdit.precio,\n    stock: productToEdit.stock,\n    foto: productToEdit.foto,\n  });\n\n  const { codigo, nombre, descripcion, precio, categoria, stock, foto } =\n    formValues;\n  const fotoRef = useRef<HTMLInputElement>(null);\n\n  const dispatch = useAppDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.name === 'foto' && fotoRef.current && fotoRef.current.files) {\n      setFormValues({\n        ...formValues,\n        foto: URL.createObjectURL(fotoRef.current.files[0]),\n      });\n    } else {\n      setFormValues({\n        ...formValues,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  const handleChangeImage = () => {\n    if (fotoRef.current) fotoRef.current.click();\n  };\n\n  const handleSubmit = async () => {\n    const editedProduct = {\n      ...productToEdit,\n      ...formValues,\n    };\n    let fotoToUpload = null;\n\n    if (fotoRef.current) fotoToUpload = fotoRef.current.files;\n\n    const formData = new FormData() as IItemAPIFormData;\n    Object.entries(editedProduct).forEach(formElement => {\n      formData.append(formElement[0], formElement[1]);\n    });\n    formData.set(\n      'foto',\n      fotoToUpload && fotoToUpload[0] ? fotoToUpload[0] : productToEdit.foto,\n    );\n\n    const formDataValues = [];\n    for (let pair of formData.values()) {\n      console.log(pair);\n      formDataValues.push(pair);\n    }\n\n    const productDataUnchanged = formDataValues.every(\n      value =>\n        Object.values(productToEdit)\n          .map(value => String(value))\n          .indexOf(value as string) !== -1,\n    );\n\n    if (productDataUnchanged) {\n      toast.info('No se realizó ningún cambio');\n      handleToggleShowModal();\n    } else {\n      try {\n        setEditRequestStatus('loading');\n        await dispatch(\n          editProduct({ id: productToEdit.id, product: formData }),\n        ).unwrap();\n        setFormValues({\n          codigo: '',\n          nombre: '',\n          categoria: '',\n          descripcion: '',\n          precio: '',\n          stock: '',\n          foto: '',\n        });\n        handleToggleShowModal();\n        toast.success(`${productToEdit.nombre} editado con éxito`);\n        setTimeout(() => {\n          // since the modal only shows if there's a product to edit in productToEdit state, this setTimeout is to wait for the modal to do the closing animation before setting the productToEdit state to null, otherwise the modal will dissappear abruptly\n          setProductToEdit(null);\n        }, 1000);\n      } catch (e) {\n        toast.error(e.message);\n      } finally {\n        setEditRequestStatus('idle');\n      }\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header>\n        <Modal.Title>Editar producto</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"codigo\">\n            <Form.Label>\n              Código\n              <OverlayTrigger\n                key=\"right\"\n                placement=\"right\"\n                overlay={\n                  <Tooltip id=\"tooltip-right-codigo\">\n                    Formato: 'ECOMM-xxxx-xxxx' donde cada 'x' representa un\n                    número\n                  </Tooltip>\n                }\n              >\n                <span className=\"ms-2\">\n                  <FontAwesomeIcon icon=\"info-circle\" size=\"xs\" color=\"gray\" />\n                </span>\n              </OverlayTrigger>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={codigo}\n              name=\"codigo\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"nombre\">\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={nombre}\n              name=\"nombre\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"descripcion\">\n            <Form.Label>Descripción</Form.Label>\n            <Form.Control\n              type=\"textarea\"\n              value={descripcion}\n              name=\"descripcion\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"precio\">\n            <Form.Label>Precio</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={precio}\n              name=\"precio\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 mt-3\" controlId=\"categoria\">\n            <Form.Label>Categoria</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={categoria}\n              name=\"categoria\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"stock\">\n            <Form.Label>Stock</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={stock}\n              name=\"stock\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group\n            className=\"mb-3 d-flex gap-2 align-items-center justify-content-center flex-column\"\n            controlId=\"foto\"\n          >\n            <img\n              src={foto}\n              alt={`foto-${nombre}`}\n              className={cx(styles['product-image'])}\n            />\n            <Form.Control\n              type=\"file\"\n              ref={fotoRef}\n              name=\"foto\"\n              onChange={handleChange}\n              className=\"d-none\"\n            />\n            <Button variant=\"primary\" onClick={handleChangeImage}>\n              Cambiar Imagen\n            </Button>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => handleToggleShowModal()}\n          disabled={editRequestStatus === 'loading'}\n        >\n          Cancelar\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={handleSubmit}\n          disabled={editRequestStatus === 'loading'}\n        >\n          Editar{' '}\n          {editRequestStatus === 'loading' && (\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\n          )}\n        </Button>\n      </Modal.Footer>\n    </>\n  );\n};\n\nexport default EditModal;\n","import { useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { useAppDispatch } from 'hooks/redux';\nimport { fetchProducts } from 'features/products/productsSlice';\nimport { copyObj } from 'utilities/others';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst Filter = () => {\n  const [formValues, setFormValues] = useState({\n    nombre: '',\n    codigo: '',\n    minPrice: '',\n    maxPrice: '',\n    minStock: '',\n    maxStock: '',\n  });\n\n  // const { data, status, error } = useAppSelector(state => state.products);\n  const dispatch = useAppDispatch();\n\n  const { nombre, codigo, minPrice, maxPrice, minStock, maxStock } = formValues;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formValuesCopy = copyObj(formValues);\n    const notEmptyFields = Object.entries(formValuesCopy).filter(\n      item => item[1] !== '',\n    );\n\n    dispatch(fetchProducts(Object.fromEntries(notEmptyFields)));\n  };\n\n  return (\n    <div className={cx(styles['filter-container'])}>\n      <h2 className=\"text-center mt-4\">Filtra tu búsqueda</h2>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <Form.Floating>\n              <Form.Control\n                id=\"nombre\"\n                type=\"text\"\n                value={nombre}\n                onChange={handleChange}\n                name=\"nombre\"\n                placeholder=\"Nombre\"\n              />\n              <label htmlFor=\"nombre\">Nombre</label>\n            </Form.Floating>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <Form.Floating>\n              <Form.Control\n                id=\"codigo\"\n                type=\"text\"\n                value={codigo}\n                onChange={handleChange}\n                name=\"codigo\"\n                placeholder=\"Código\"\n              />\n              <label htmlFor=\"codigo\">Código</label>\n            </Form.Floating>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\n            <Form.Floating>\n              <Form.Control\n                id=\"minPrice\"\n                type=\"text\"\n                value={minPrice}\n                onChange={handleChange}\n                name=\"minPrice\"\n                placeholder=\"Precio Mínimo\"\n              />\n              <label htmlFor=\"minPrice\">Precio Mínimo</label>\n            </Form.Floating>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\n            <Form.Floating>\n              <Form.Control\n                id=\"maxPrice\"\n                type=\"text\"\n                value={maxPrice}\n                onChange={handleChange}\n                name=\"maxPrice\"\n                placeholder=\"Precio Máximo\"\n              />\n              <label htmlFor=\"maxPrice\">Precio Máximo</label>\n            </Form.Floating>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\n            <Form.Floating>\n              <Form.Control\n                id=\"minStock\"\n                type=\"text\"\n                value={minStock}\n                onChange={handleChange}\n                name=\"minStock\"\n                placeholder=\"Stock Mínimo\"\n              />\n              <label htmlFor=\"minStock\">Stock Mínimo</label>\n            </Form.Floating>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\n            <Form.Floating>\n              <Form.Control\n                id=\"maxStock\"\n                type=\"text\"\n                value={maxStock}\n                onChange={handleChange}\n                name=\"maxStock\"\n                placeholder=\"Stock Máximo\"\n              />\n              <label htmlFor=\"maxStock\">Stock Máximo</label>\n            </Form.Floating>\n          </Col>\n        </Row>\n        <Button type=\"submit\">Buscar</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { isEmpty } from 'utilities/others';\nimport { IItemAPI } from 'commons/interfaces';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport {\n  fetchProducts,\n  removeProductApi,\n  removeProduct,\n} from 'features/products/productsSlice';\nimport { addProductToCart } from 'features/cart/cartSlice';\nimport ConfirmationModal from 'components/Modals/ConfirmationModal/ConfirmationModal';\nimport ProductList from 'components/ProductList/ProductList';\nimport EditModal from 'components/Modals/EditModal/EditModal';\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\nimport Filter from 'components/Filter/Filter';\nimport LoadingData from 'components/LoadingData/LoadingData';\n\nconst Productos = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [productToDelete, setProductToDelete] = useState<IItemAPI | null>(null);\n  const [productToEdit, setProductToEdit] = useState<IItemAPI | null>(null);\n  const [deleteRequestStatus, setDeleteRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n  const [addToCartRequestStatus, setAddToCartRequestStatus] = useState<\n    'idle' | 'loading'\n  >('idle');\n\n  const { data, status, error } = useAppSelector(state => state.products);\n  const dispatch = useAppDispatch();\n\n  const handleToggleShowModal = (\n    producto?: IItemAPI,\n    action?: 'edit' | 'delete',\n  ) => {\n    if (producto && action === 'delete') {\n      setProductToDelete(producto);\n      setProductToEdit(null);\n    }\n    if (producto && action === 'edit') {\n      setProductToEdit(producto);\n      setProductToDelete(null);\n    }\n    setShowModal(prevState => !prevState);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (productToDelete) {\n      try {\n        setDeleteRequestStatus('loading');\n        await dispatch(removeProductApi(productToDelete.id)).unwrap();\n        dispatch(removeProduct(productToDelete.id));\n        handleToggleShowModal();\n        toast.success(`${productToDelete.nombre} eliminado con éxito`);\n        setTimeout(() => {\n          // since the modal only shows if there's a product to edit in productToDelete state, this setTimeout is to wait for the modal to do the closing animation before setting the productToDelete state to null, otherwise the modal will dissappear abruptly\n          setProductToDelete(null);\n        }, 1000);\n      } catch (e) {\n        toast.error(e.message);\n      } finally {\n        setDeleteRequestStatus('idle');\n      }\n    }\n  };\n\n  const handleAddToCart = async (producto: IItemAPI) => {\n    try {\n      setAddToCartRequestStatus('loading');\n      disableBodyScroll(document.body);\n      await dispatch(addProductToCart(producto.id)).unwrap();\n      toast.success(`${producto.nombre} agregado al carrito`);\n    } catch (e) {\n      toast.error(e.message);\n    } finally {\n      setAddToCartRequestStatus('idle');\n      enableBodyScroll(document.body);\n    }\n  };\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchProducts());\n    } else if (status === 'failed') {\n      toast.error(error);\n    }\n  }, [status, dispatch, error]);\n\n  return (\n    <>\n      <h1 className=\"text-center mt-5 pt-4\">Productos</h1>\n      {isEmpty(data) ? (\n        status === 'loading' ? (\n          <LoadingData />\n        ) : (\n          <div className=\"text-center mt-4\">\n            <h2>\n              No se encontraron productos, intenta con otros parámetros de\n              búsqueda\n            </h2>\n          </div>\n        )\n      ) : (\n        <>\n          <Filter />\n          <ProductList\n            location=\"home\"\n            productos={data}\n            handleToggleShowModal={handleToggleShowModal}\n            handleAddToCart={handleAddToCart}\n          />\n        </>\n      )}\n      <Modal show={showModal} onHide={() => handleToggleShowModal()}>\n        {productToDelete && (\n          <ConfirmationModal\n            productToDelete={productToDelete}\n            handleConfirmDelete={handleConfirmDelete}\n            handleToggleShowModal={handleToggleShowModal}\n            deleteRequestStatus={deleteRequestStatus}\n          />\n        )}\n        {productToEdit && (\n          <EditModal\n            setProductToEdit={setProductToEdit}\n            productToEdit={productToEdit}\n            handleToggleShowModal={handleToggleShowModal}\n          />\n        )}\n      </Modal>\n      {addToCartRequestStatus === 'loading' && (\n        <LoadingScreen\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Productos;\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { IMessage } from 'commons/interfaces';\r\n\r\ninterface MessagesState {\r\n  data: IMessage[];\r\n  status: 'idle' | 'succeeded';\r\n}\r\n\r\nconst initialState: MessagesState = {\r\n  data: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const messagesSlice = createSlice({\r\n  name: 'messages',\r\n  initialState,\r\n  reducers: {\r\n    setMessages: (state, action) => {\r\n      state.data = action.payload;\r\n      state.status = 'succeeded';\r\n    },\r\n    addMessage: (state, action) => {\r\n      state.data.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMessages, addMessage } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","import { Button } from 'react-bootstrap';\nimport { AdvancedImage, lazyload, placeholder } from '@cloudinary/react';\nimport { thumbnail } from '@cloudinary/url-gen/actions/resize';\nimport { IUser } from 'commons/interfaces';\nimport { cld } from 'services/Cloudinary';\n\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IUserData {\n  data: IUser;\n  dashboard?: boolean;\n  handleLogout?: () => Promise<void>;\n  status?: 'idle' | 'loading' | 'succeeded' | 'failed';\n}\n\nconst UserData = ({ data, dashboard, handleLogout, status }: IUserData) => {\n  const profileImg = cld.image(`${data.fotoId}`);\n  profileImg.resize(thumbnail().width(200).height(200));\n\n  return (\n    <div>\n      <div className={cx(styles['user-data'])}>\n        <AdvancedImage\n          cldImg={profileImg}\n          plugins={[lazyload(), placeholder('blur')]}\n        />\n        <div className={cx(styles['user-data__info'])}>\n          <span>\n            <span className=\"fw-bold\">Email:</span> {data?.email}\n          </span>\n          <span>\n            <span className=\"fw-bold\">Direccion:</span> {data?.calle}{' '}\n            {data?.altura}\n            {data?.piso ? `, Piso ${data?.piso}` : ''}\n            {data?.depto ? `, Depto ${data?.depto}` : ''}\n          </span>\n          <span>\n            <span className=\"fw-bold\">Código Postal:</span> {data?.codigoPostal}\n          </span>\n          <span>\n            <span className=\"fw-bold\">Edad:</span> {data?.edad}\n          </span>\n          <span>\n            <span className=\"fw-bold\">Teléfono:</span> {data?.telefono}\n          </span>\n          {dashboard && (\n            <Button\n              onClick={status === 'loading' ? undefined : handleLogout}\n              disabled={status === 'loading'}\n            >\n              {status === 'loading' ? 'Procesando...' : 'Logout'}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserData;\n","import React, { useState, useRef } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  OverlayTrigger,\n  Row,\n  Spinner,\n  Tooltip,\n} from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useAppDispatch } from 'hooks/redux';\nimport { addNewProduct } from 'features/products/productsSlice';\nimport { IItemFormData } from 'commons/interfaces';\n\nconst ProductForm = () => {\n  const [addRequestStatus, setAddRequestStatus] = useState<'idle' | 'loading'>(\n    'idle',\n  );\n\n  const dispatch = useAppDispatch();\n\n  const [formValues, setFormValues] = useState({\n    codigo: '',\n    nombre: '',\n    descripcion: '',\n    precio: '',\n    categoria: '',\n    stock: '',\n  });\n  const { codigo, nombre, descripcion, precio, categoria, stock } = formValues;\n  const fotoRef = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSaveProduct = async () => {\n    let fotoToUpload = null;\n\n    if (fotoRef.current) fotoToUpload = fotoRef.current.files;\n\n    const formData = new FormData() as IItemFormData;\n    Object.entries(formValues).forEach(formElement => {\n      formData.append(formElement[0], formElement[1]);\n    });\n    formData.append('foto', fotoToUpload ? fotoToUpload[0] : '');\n\n    try {\n      setAddRequestStatus('loading');\n\n      await dispatch(addNewProduct(formData)).unwrap();\n      setFormValues({\n        codigo: '',\n        nombre: '',\n        descripcion: '',\n        precio: '',\n        categoria: '',\n        stock: '',\n      });\n      if (fotoRef.current) fotoRef.current.value = '';\n\n      toast.success('El producto fue agregado con éxito');\n    } catch (e) {\n      toast.error(e.message);\n    } finally {\n      setAddRequestStatus('idle');\n    }\n  };\n\n  return (\n    <>\n      <Form>\n        <Row>\n          <Col sm=\"12\" md=\"6\">\n            <Form.Group className=\"mb-3\" controlId=\"codigo\">\n              <Form.Label>\n                Código\n                <OverlayTrigger\n                  key=\"right\"\n                  placement=\"right\"\n                  overlay={\n                    <Tooltip id=\"tooltip-right\">\n                      Formato: 'ECOMM-xxxx-xxxx' donde cada 'x' representa un\n                      número\n                    </Tooltip>\n                  }\n                >\n                  <span className=\"ms-2\">\n                    <FontAwesomeIcon\n                      icon=\"info-circle\"\n                      size=\"xs\"\n                      color=\"gray\"\n                    />\n                  </span>\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={codigo}\n                name=\"codigo\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"nombreProducto\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={nombre}\n                name=\"nombre\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"descripcion\">\n              <Form.Label>Descripción</Form.Label>\n              <Form.Control\n                type=\"textarea\"\n                value={descripcion}\n                name=\"descripcion\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Col>\n          <Col sm=\"12\" md=\"6\">\n            <Form.Group className=\"mb-3\" controlId=\"precio\">\n              <Form.Label>Precio</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={precio}\n                name=\"precio\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3 mt-3\" controlId=\"categoria\">\n              <Form.Label>Categoria</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={categoria}\n                name=\"categoria\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"stock\">\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={stock}\n                name=\"stock\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form.Group className=\"mb-3\" controlId=\"fotoProduct\">\n          <Form.Label>Imagen del producto</Form.Label>\n          <Form.Control type=\"file\" ref={fotoRef} name=\"foto\" />\n        </Form.Group>\n        <Button\n          className=\"mb-2\"\n          onClick={handleSaveProduct}\n          disabled={addRequestStatus === 'loading'}\n        >\n          Guardar{' '}\n          {addRequestStatus === 'loading' && (\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\n          )}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductForm;\n","import ProductForm from 'components/ProductForm/ProductForm';\nimport SignupForm from 'components/SignupForm/SignupForm';\nimport { Tab, Tabs } from 'react-bootstrap';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <h3 className=\"text-center mt-5\">Dashboard</h3>\n      <Tabs\n        defaultActiveKey=\"productos\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"productos\" title=\"Agregar producto\">\n          <ProductForm />\n        </Tab>\n        <Tab eventKey=\"usuarios\" title=\"Agregar usuario\">\n          <SignupForm location=\"dashboard\" />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { userLogout } from 'features/user/userSlice';\nimport { emptyCart } from 'features/cart/cartSlice';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { setMessages } from 'features/messages/messagesSlice';\nimport UserData from 'components/UserData/UserData';\nimport LoadingData from 'components/LoadingData/LoadingData';\nimport Dashboard from 'components/Dashboard/Dashboard';\n\nconst Account = () => {\n  const { data, status } = useAppSelector(state => state.user);\n  const dispatch = useAppDispatch();\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(userLogout()).unwrap();\n      dispatch(emptyCart());\n      dispatch(setMessages([]));\n    } catch (e) {\n      toast.error('Hubo un error, por favor intente de nuevo.');\n    }\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <h1 className=\"text-center mt-5 pt-4\">Mi cuenta</h1>\n      {data === null ? (\n        status === 'loading' ? (\n          <LoadingData />\n        ) : (\n          <>\n            <h1 className=\"mt-5 pt-3 mb-3\">\n              Ha ocurrido un error, intenta loggearte nuevamente\n            </h1>\n            <Button onClick={handleLogout}>Logout</Button>\n          </>\n        )\n      ) : (\n        <UserData\n          dashboard\n          data={data}\n          status={status}\n          handleLogout={handleLogout}\n        />\n      )}\n      {data !== null && data.admin && <Dashboard />}\n    </div>\n  );\n};\n\nexport default Account;\n","import socketClient from \"socket.io-client\";\r\n\r\nexport const socket = socketClient(\"/\");\r\n","import { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Spinner } from 'react-bootstrap';\nimport moment from 'moment';\nimport { socket } from 'services/Socket';\nimport { isEmpty } from 'utilities/others';\nimport { useAppSelector, useAppDispatch } from 'hooks/redux';\nimport { setMessages, addMessage } from 'features/messages/messagesSlice';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst ChatChannel = () => {\n  const [savingMessage, setSavingMessage] = useState(false);\n  const { data: dataUser } = useAppSelector(state => state.user);\n  const { data: messages, status } = useAppSelector(state => state.messages);\n\n  const dispatch = useAppDispatch();\n\n  const [formValues, setFormValues] = useState({\n    email: dataUser ? dataUser.email : '',\n    text: '',\n  });\n\n  const { email, text } = formValues;\n  const emailRef = useRef<HTMLInputElement>(null);\n  const chatBoxRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (dataUser && status === 'idle') {\n      socket.emit('get messages', dataUser.email);\n      socket.on('messages', data => {\n        dispatch(setMessages(data));\n      });\n      socket.on('messages error', data => {\n        toast.warning(data.message);\n      });\n    }\n  }, [dataUser, dispatch, status]);\n\n  useEffect(() => {\n    if (chatBoxRef.current && !isEmpty(messages)) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (isEmpty(email) || isEmpty(text)) {\n      toast.warning('Ambos campos son obligatorios');\n    } else {\n      socket.emit('new message', formValues);\n      setSavingMessage(true);\n      dispatch(\n        addMessage({ user: dataUser, text: formValues.text, type: 'usuario' }),\n      );\n      setFormValues({\n        ...formValues,\n        text: '',\n      });\n\n      socket.on('new message saved', data => {\n        dispatch(setMessages(data));\n        setSavingMessage(false);\n      });\n\n      socket.on('messages error', data => {\n        setSavingMessage(false);\n        toast.warning(data.message);\n      });\n    }\n  };\n\n  return (\n    <div className={cx(styles['chat-channel'])}>\n      <div\n        ref={chatBoxRef}\n        className={cx(styles['chat-channel__messages'], {\n          [styles['chat-channel__messages--loading']]: status === 'idle',\n          [styles['chat-channel__messages--no-messages']]:\n            status === 'succeeded' && messages.length === 0,\n        })}\n      >\n        {status === 'idle' && (\n          <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        )}\n        {status === 'succeeded' && messages.length === 0 ? (\n          <h3 className=\"text-center\">No tienes mensajes</h3>\n        ) : (\n          messages.map(msg => (\n            <div\n              key={msg.id}\n              className={cx(styles['chat-channel__message'], {\n                [styles['chat-channel__message--bot']]: msg.type === 'sistema',\n              })}\n            >\n              <p>\n                <span\n                  className={cx(styles['chat-channel__message-email'], {\n                    [styles['chat-channel__message-email--bot']]:\n                      msg.type === 'sistema',\n                  })}\n                >\n                  {msg.type === 'sistema' ? 'Chatbot' : msg.user.email}\n                </span>\n                <span className={cx(styles['chat-channel__message-text'])}>\n                  {msg.type === 'sistema'\n                    ? msg.text.split('$nl').map(item => <p>{item}</p>)\n                    : msg.text}\n                </span>\n              </p>\n              <small className={cx(styles['chat-channel__message-date'])}>\n                {moment(msg.date).format('DD/MM/YYYY hh:mm:ss')}\n              </small>\n            </div>\n          ))\n        )}\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <div className={cx(styles['chat-channel__form'])}>\n          <Form.Control\n            value={email}\n            onChange={handleChange}\n            disabled={true}\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            ref={emailRef}\n          />\n          <Form.Control\n            value={text}\n            onChange={handleChange}\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Ingresa un mensaje\"\n          />\n          <Button\n            className=\"w-100\"\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={savingMessage}\n          >\n            <span className=\"d-flex align-items-center justify-content-center gap-2\">\n              Enviar\n              {savingMessage && (\n                <Spinner\n                  animation=\"border\"\n                  role=\"status\"\n                  variant=\"light\"\n                  size=\"sm\"\n                >\n                  <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n              )}\n            </span>\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default ChatChannel;\n","import ChatChannel from 'components/ChatChannel/ChatChannel';\n\nconst Chat = () => {\n  return (\n    <>\n      <h1 className=\"text-center mt-5 pt-4\">Centro de Mensajes</h1>\n      <ChatChannel />\n    </>\n  );\n};\n\nexport default Chat;\n","import { Col, Row, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { useAppSelector } from 'hooks/redux';\nimport { IOrder } from 'commons/interfaces';\nimport cx from 'classnames/bind';\nimport styles from './styles.module.scss';\n\ninterface IOrderInfo {\n  order: IOrder;\n}\n\nconst OrderInfo = ({ order }: IOrderInfo) => {\n  const { data: userData } = useAppSelector(state => state.user);\n\n  const total = order.productos.reduce((total, item) => {\n    return (total += Number(item.producto.precio) * item.quantity);\n  }, 0);\n\n  const estado = order.estado.charAt(0).toUpperCase() + order.estado.slice(1);\n\n  return (\n    <div\n      className={cx(styles['last-order'], 'border', 'p-3', 'rounded', 'mt-4')}\n    >\n      <Row>\n        <Col md=\"12\" lg=\"6\">\n          <h5>Información de tu pedido</h5>\n          <Table responsive striped bordered hover>\n            <thead>\n              <tr>\n                <th>Cantidad</th>\n                <th>Producto</th>\n                <th>Precio</th>\n              </tr>\n            </thead>\n            <tbody>\n              {order &&\n                order.productos.map(product => (\n                  <tr>\n                    <td>{product.quantity}</td>\n                    <td>{product.producto.nombre}</td>\n                    <td className=\"fw-bold\">\n                      ${Number(product.producto.precio) * product.quantity}\n                    </td>\n                  </tr>\n                ))}\n              <tr>\n                <td colSpan={2} className=\"text-end\">\n                  Total:\n                </td>\n                <td className=\"fw-bold\">${total}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <h5>Datos de la entrega:</h5>\n          <ul>\n            <li>\n              <span className=\"fw-bold\">Estado:</span> {estado}\n            </li>\n            <li>\n              <span className=\"fw-bold\">Entregar a:</span> {userData?.nombre}\n            </li>\n            <li>\n              <span className=\"fw-bold\">Email:</span> {userData?.email}\n            </li>\n            <li>\n              <span className=\"fw-bold\">Orden creada:</span>{' '}\n              {moment(order.timestamp).format('DD/MM/YYYY, LT')}\n            </li>\n            <li>\n              <span className=\"fw-bold\">Dirección de entrega:</span>{' '}\n              {order.direccionEntrega}\n            </li>\n            <li>\n              <span className=\"fw-bold\">Código Postal:</span>{' '}\n              {order.codigoPostal}\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderInfo;\n","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { fetchOrders } from 'features/orders/ordersSlice';\nimport { isEmpty } from 'utilities/others';\nimport OrderInfo from 'components/OrderInfo/OrderInfo';\nimport LoadingData from 'components/LoadingData/LoadingData';\n\nconst Orders = () => {\n  const { data, status, error } = useAppSelector(state => state.orders);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchOrders());\n    }\n    if (status === 'failed') {\n      toast.error(error || 'Ocurrió un error');\n    }\n  }, [dispatch, error, status]);\n\n  return (\n    <div>\n      <h1 className=\"text-center mt-5 pt-3\">Ordenes</h1>\n      {isEmpty(data) ? (\n        status === 'loading' ? (\n          <LoadingData />\n        ) : (\n          <h1 className=\"mt-5 pt-3 mb-3\">No haz realizado ninguna orden</h1>\n        )\n      ) : (\n        <>\n          <h3>En curso</h3>\n          {data.map(item => {\n            if (item.estado === 'generada') return <OrderInfo order={item} />;\n            return null;\n          })}\n          <h3 className=\"mt-3\">Completadas</h3>\n          {data.map(item => {\n            if (item.estado === 'completada') return <OrderInfo order={item} />;\n            return null;\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Orders;\n","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAppSelector, useAppDispatch } from 'hooks/redux';\nimport { fetchOrders } from 'features/orders/ordersSlice';\nimport LoadingData from 'components/LoadingData/LoadingData';\nimport OrderInfo from 'components/OrderInfo/OrderInfo';\n\nconst SuccesfulOrder = () => {\n  const { lastOrder, status, error } = useAppSelector(state => state.orders);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchOrders());\n    }\n    if (status === 'failed') {\n      toast.error(error || 'Ocurrió un error obteniendo la última orden');\n    }\n  }, [dispatch, error, status]);\n\n  return (\n    <div>\n      {!lastOrder ? (\n        status === 'loading' ? (\n          <LoadingData style={{ height: '100vh' }} />\n        ) : (\n          <h1 className=\"text-center mt-5 pt-3 mb-3\">\n            No tienes ordenes en curso\n          </h1>\n        )\n      ) : (\n        <>\n          <h1 className=\"text-center mt-5 pt-3 mb-3\">\n            ¡Tu orden está siendo procesada!\n          </h1>\n          <OrderInfo order={lastOrder} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SuccesfulOrder;\n","import { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\nimport Navigation from 'components/Navigation/Navigation';\nimport Login from 'pages/Login/Login';\nimport Signup from 'pages/Signup/Signup';\nimport Cart from 'pages/Cart/Cart';\nimport Productos from 'pages/Productos/Productos';\nimport Account from 'pages/Account/Account';\nimport Chat from 'pages/Chat/Chat';\nimport Orders from 'pages/Orders/Orders';\nimport { useAppSelector, useAppDispatch } from 'hooks/redux';\nimport { getUserData } from 'features/user/userSlice';\nimport { getCookie } from 'utilities/others';\nimport SuccesfulOrder from 'pages/SuccessfulOrder/SuccesfulOrder';\n\nlibrary.add(fas);\n\nconst App = () => {\n  const { status, isLoggedIn } = useAppSelector(state => state.user);\n  const dispatch = useAppDispatch();\n\n  const isLoggedInCookie = getCookie('connect.sid');\n\n  useEffect(() => {\n    if (isLoggedInCookie && status === 'idle') {\n      const getUserInfo = async () => {\n        try {\n          await dispatch(getUserData()).unwrap();\n        } catch (e) {\n          console.log(e);\n        }\n      };\n      getUserInfo();\n    }\n  }, [status, dispatch, isLoggedInCookie]);\n\n  return (\n    <Router>\n      {isLoggedInCookie && (status === 'idle' || status === 'loading') ? (\n        <LoadingScreen />\n      ) : (\n        <>\n          {isLoggedIn && <Navigation />}\n          <Container>\n            <Switch>\n              <Route path=\"/login\">\n                {isLoggedIn ? <Redirect to=\"/\" /> : <Login />}\n              </Route>\n              <Route path=\"/signup\">\n                {isLoggedIn ? <Redirect to=\"/\" /> : <Signup />}\n              </Route>\n              <Route path=\"/chat\">\n                {isLoggedIn ? <Chat /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/cart\">\n                {isLoggedIn ? <Cart /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/successful-order\">\n                {isLoggedIn ? <SuccesfulOrder /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/ordenes\">\n                {isLoggedIn ? <Orders /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/account\">\n                {isLoggedIn ? <Account /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/\">\n                {isLoggedIn ? <Productos /> : <Redirect to=\"/login\" />}\n              </Route>\n            </Switch>\n          </Container>\n        </>\n      )}\n      <ToastContainer />\n    </Router>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport productsReducer from 'features/products/productsSlice';\r\nimport cartReducer from 'features/cart/cartSlice';\r\nimport userReducer from 'features/user/userSlice';\r\nimport messagesReducer from 'features/messages/messagesSlice';\r\nimport ordersReducer from 'features/orders/ordersSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    messages: messagesReducer,\r\n    orders: ordersReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {products: ProductsState }\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from 'store';\nimport { Provider } from 'react-redux';\n// import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-phone-number-input/style.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-channel\":\"styles_chat-channel__3kc8J\",\"chat-channel__messages\":\"styles_chat-channel__messages__Naigt\",\"chat-channel__messages--loading\":\"styles_chat-channel__messages--loading__3Eb9U\",\"chat-channel__messages--no-messages\":\"styles_chat-channel__messages--no-messages__15UYt\",\"chat-channel__message\":\"styles_chat-channel__message__3S3Et\",\"chat-channel__message--bot\":\"styles_chat-channel__message--bot__1I5J7\",\"chat-channel__message-email\":\"styles_chat-channel__message-email__3KCAX\",\"chat-channel__message-email--bot\":\"styles_chat-channel__message-email--bot__XoNOn\",\"chat-channel__message-text\":\"styles_chat-channel__message-text__2sWmS\",\"chat-channel__message-date\":\"styles_chat-channel__message-date__3Ldd4\",\"chat-channel__form\":\"styles_chat-channel__form__128TP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-carrito\":\"styles_product-carrito__w9h_z\",\"product-carrito__img\":\"styles_product-carrito__img__3lOp8\",\"product-carrito__info-container\":\"styles_product-carrito__info-container__xkUfY\",\"product-carrito__info\":\"styles_product-carrito__info__3cczg\",\"product-carrito__qty-price\":\"styles_product-carrito__qty-price__3TmcJ\",\"product-carrito__qty-form\":\"styles_product-carrito__qty-form__1O6EU\",\"product-carrito__btns\":\"styles_product-carrito__btns__2Oedl\",\"product-carrito__price\":\"styles_product-carrito__price__3CqFm\"};"],"sourceRoot":""}