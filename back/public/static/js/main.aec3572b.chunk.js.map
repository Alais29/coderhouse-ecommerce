{"version":3,"sources":["components/LoadingScreen/LoadingScreen.tsx","components/Navigation/CartIcon.tsx","components/Navigation/Navigation.tsx","hooks/redux.ts","components/LoginForm/LoginForm.tsx","services/Login.ts","features/user/userSlice.ts","pages/Login/Login.tsx","components/SignupForm/SignupForm.tsx","pages/Signup/Signup.tsx","services/Productos.ts","features/products/productsSlice.ts","components/ProductForm/ProductForm.tsx","pages/AddProduct/AddProduct.tsx","services/Carrito.ts","services/Orders.ts","features/cart/cartSlice.ts","utilities/others.ts","components/Product/Product.tsx","components/ProductCarrito/ProductCarrito.tsx","components/ProductList/ProductList.tsx","pages/Cart/Cart.tsx","components/Modals/ConfirmationModal/ConfirmationModal.tsx","components/Modals/EditModal/EditModal.tsx","components/Filter/Filter.tsx","pages/Productos/Productos.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","store/index.ts","index.tsx","components/ProductCarrito/styles.module.scss","pages/Dashboard/styles.module.scss","components/Product/styles.module.scss","components/LoadingScreen/styles.module.scss","components/Navigation/styles.module.scss","components/SignupForm/styles.module.scss","components/ProductList/styles.module.scss","pages/Cart/styles.module.scss","pages/Productos/styles.module.scss","components/Filter/styles.module.scss"],"names":["LoadingScreen","style","className","cx","styles","Spinner","animation","variant","CartIcon","height","viewBox","width","xmlns","fill","d","Navigation","Navbar","bg","fixed","expand","Toggle","aria-controls","Collapse","id","Container","Nav","to","useAppDispatch","useDispatch","useAppSelector","useSelector","LoginForm","onSubmit","useState","email","password","formValues","setFormValues","status","state","user","handleChange","e","target","name","value","handleSubmit","preventDefault","Form","Group","controlId","Label","Control","type","onChange","Button","disabled","baseUrl","loginUser","data","a","axios","post","response","signupUser","logoutUser","get","Error","message","userData","userSignUp","createAsyncThunk","userLogin","userLogout","getUserData","userSlice","createSlice","initialState","isLoggedIn","error","reducers","setStatus","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","Login","dispatch","history","useHistory","unwrap","push","toast","SignupForm","repeatPassword","nombre","direccion","edad","telefono","setTelefono","fotoRef","useRef","fotoToUpload","current","files","formData","FormData","Object","entries","forEach","formElement","append","undefined","placeholder","ref","Signup","callback","success","dataObj","key","loginData","getProducts","query","queryString","queryArray","queryValues","index","length","saveProduct","newProduct","deleteProduct","delete","updateProduct","product","put","fetchProducts","addNewProduct","editProduct","productData","removeProductApi","productId","productsSlice","removeProduct","filter","item","productToUpdateIndex","map","indexOf","splice","ProductForm","handleSaveProduct","addRequestStatus","codigo","descripcion","precio","stock","foto","Text","onClick","size","AddProduct","setAddRequestStatus","getCarritoProducts","saveCarritoProduct","editCarritoProduct","deleteCarritoProduct","sendOrder","fetchProductsCart","addProductToCart","editProductInCart","removeProductCart","sendCartOrder","cartSlice","emptyCart","concat","productIndex","findIndex","producto","quantity","isEmpty","JSON","stringify","Product","handleToggleShowModal","handleAddToCart","Card","Img","src","Body","Title","Subtitle","ProductCarrito","handleRemove","qtyDisabled","setQtyDisabled","setQuantity","editProductRequestStatus","setEditProductRequestStatus","handleSaveChanges","disableBodyScroll","document","body","amount","enableBodyScroll","backgroundColor","zIndex","alt","Number","ProductList","productos","location","Cart","total","setTotal","deleteProductRequestStatus","setDeleteProductRequestStatus","sendOrderRequestStatus","setSendOrderRequestStatus","cart","handleSendOrder","useEffect","totalCost","reduce","toFixed","ConfirmationModal","productToDelete","handleConfirmDelete","deleteRequestStatus","Modal","Header","Footer","EditModal","productToEdit","handleConfirmEdit","editRequestStatus","editedProduct","Filter","minPrice","maxPrice","minStock","maxStock","obj","formValuesCopy","parse","notEmptyFields","fromEntries","Row","Col","xs","sm","Floating","htmlFor","md","Productos","showModal","setShowModal","setProductToDelete","setProductToEdit","setDeleteRequestStatus","setEditRequestStatus","addToCartRequestStatus","setAddToCartRequestStatus","products","prevState","setTimeout","show","onHide","Dashboard","logoutError","setLogoutError","handleLogout","Alert","App","isLoggedInCookie","cookieName","cookie","split","el","trim","getCookie","console","log","getUserInfo","path","store","configureStore","reducer","productsReducer","cartReducer","userReducer","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.aec3572b.chunk.js","sourcesContent":["import { CSSProperties } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface ILoadingScreen {\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst LoadingScreen = ({ style = {} }: ILoadingScreen) => {\r\n  return (\r\n    <div className={cx(styles['loading-screen'])} style={style}>\r\n      <Spinner animation=\"grow\" variant=\"primary\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","const CartIcon = () => (\r\n  <svg\r\n    height=\"20px\"\r\n    viewBox=\"0 -31 512.00033 512\"\r\n    width=\"20px\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#9b9d9e\"\r\n  >\r\n    <path d=\"m166 300.003906h271.003906c6.710938 0 12.597656-4.4375 14.414063-10.882812l60.003906-210.003906c1.289063-4.527344.40625-9.390626-2.433594-13.152344-2.84375-3.75-7.265625-5.964844-11.984375-5.964844h-365.632812l-10.722656-48.25c-1.523438-6.871094-7.617188-11.75-14.648438-11.75h-91c-8.289062 0-15 6.710938-15 15 0 8.292969 6.710938 15 15 15h78.960938l54.167968 243.75c-15.9375 6.929688-27.128906 22.792969-27.128906 41.253906 0 24.8125 20.1875 45 45 45h271.003906c8.292969 0 15-6.707031 15-15 0-8.289062-6.707031-15-15-15h-271.003906c-8.261719 0-15-6.722656-15-15s6.738281-15 15-15zm0 0\" />\r\n    <path d=\"m151 405.003906c0 24.816406 20.1875 45 45.003906 45 24.8125 0 45-20.183594 45-45 0-24.8125-20.1875-45-45-45-24.816406 0-45.003906 20.1875-45.003906 45zm0 0\" />\r\n    <path d=\"m362.003906 405.003906c0 24.816406 20.1875 45 45 45 24.816406 0 45-20.183594 45-45 0-24.8125-20.183594-45-45-45-24.8125 0-45 20.1875-45 45zm0 0\" />\r\n  </svg>\r\n);\r\n\r\nexport default CartIcon;\r\n","import { Link } from 'react-router-dom';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport CartIcon from './CartIcon';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"sm\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Container>\r\n          <Nav className=\"me-auto\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              Inicio\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/productos\">\r\n              Productos\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/add-product\">\r\n              Agregar Producto\r\n            </Link>\r\n            <Link\r\n              className={cx('nav-link', 'ms-sm-auto', styles['cart-icon'])}\r\n              to=\"/cart\"\r\n            >\r\n              <CartIcon />\r\n            </Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useState } from 'react';\r\nimport { IUser } from 'commons/interfaces';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useAppSelector } from 'hooks/redux';\r\n\r\ninterface ILoginForm {\r\n  onSubmit: (data: IUser) => void;\r\n}\r\n\r\nconst LoginForm = ({ onSubmit }: ILoginForm) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { status } = useAppSelector(state => state.user);\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onSubmit(formValues);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={e => handleSubmit(e)}>\r\n        <Form.Group className=\"mb-3\" controlId=\"nombre\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"mb-2\" type=\"submit\" disabled={status === 'loading'}>\r\n          {status === 'loading' ? 'Procesando...' : 'Login'}\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from \"axios\";\r\nimport { IUser } from \"commons/interfaces\";\r\n\r\nconst baseUrl = \"/api/auth\";\r\n\r\nexport const loginUser = async (data: IUser) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/login`, data);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw e.response.data;\r\n  }\r\n};\r\n\r\nexport const signupUser = async (data: IUser) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/signup`, data);\r\n    return response.data;\r\n  } catch (e) {\r\n    throw e.response.data;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/logout`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const userData = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/userdata`);\r\n    return response.data;\r\n  } catch (e) {\r\n    throw e.response.data;\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IUser } from 'commons/interfaces';\r\nimport { loginUser, signupUser, logoutUser, userData } from 'services/Login';\r\n\r\ninterface UserState {\r\n  data: IUser | null;\r\n  isLoggedIn: boolean;\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  data: null,\r\n  isLoggedIn: false,\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const userSignUp = createAsyncThunk(\r\n  'user/signup',\r\n  async (userData: IUser) => {\r\n    await signupUser(userData);\r\n  },\r\n);\r\n\r\nexport const userLogin = createAsyncThunk(\r\n  'user/login',\r\n  async (userData: IUser) => {\r\n    const response = await loginUser(userData);\r\n    return response.user;\r\n  },\r\n);\r\n\r\nexport const userLogout = createAsyncThunk('user/logout', async () => {\r\n  const response = await logoutUser();\r\n  return response;\r\n});\r\n\r\nexport const getUserData = createAsyncThunk('user/data', async () => {\r\n  const response = await userData();\r\n  return response.data;\r\n});\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(userLogin.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(userLogin.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n        state.isLoggedIn = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(userLogin.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(userLogout.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(userLogout.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.isLoggedIn = false;\r\n        state.error = null;\r\n        state.data = null;\r\n      })\r\n      .addCase(userLogout.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(getUserData.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getUserData.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n        state.status = 'succeeded';\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(getUserData.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setStatus } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { IUser } from 'commons/interfaces';\r\nimport LoginForm from 'components/LoginForm/LoginForm';\r\nimport { userLogin } from 'features/user/userSlice';\r\nimport { useAppDispatch } from 'hooks/redux';\r\n\r\nconst Login = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (data: IUser) => {\r\n    try {\r\n      await dispatch(userLogin(data)).unwrap();\r\n      history.push('/dashboard');\r\n    } catch (e) {\r\n      toast.error(\r\n        'Hubo un error, por favor verifique su usuario y/o contraseña',\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-5 pt-3\">Login de Usuario</h1>\r\n      <LoginForm onSubmit={handleSubmit} />\r\n      <hr />\r\n      <div>\r\n        <span>¿No tienes cuenta?</span>\r\n        <Link className=\"btn btn-primary ms-2\" to=\"/signup\">\r\n          Regístrate\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef } from 'react';\r\nimport { IUserFormData } from 'commons/interfaces';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface ISignupForm {\r\n  onSubmit: (data: IUserFormData, callback: () => void) => void;\r\n}\r\n\r\nconst SignupForm = ({ onSubmit }: ISignupForm) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n    nombre: '',\r\n    direccion: '',\r\n    edad: '',\r\n  });\r\n  const [telefono, setTelefono] = useState();\r\n  const { email, password, repeatPassword, nombre, direccion, edad } =\r\n    formValues;\r\n\r\n  const fotoRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    let fotoToUpload = null;\r\n    if (fotoRef.current) fotoToUpload = fotoRef.current.files;\r\n\r\n    const formData = new FormData() as IUserFormData;\r\n    Object.entries(formValues).forEach(formElement => {\r\n      formData.append(formElement[0], formElement[1]);\r\n    });\r\n    formData.append('foto', fotoToUpload ? fotoToUpload[0] : '');\r\n    formData.append('telefono', telefono || '');\r\n\r\n    onSubmit(formData, () => {\r\n      setFormValues({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        nombre: '',\r\n        direccion: '',\r\n        edad: '',\r\n      });\r\n      setTelefono(undefined);\r\n      if (fotoRef.current) fotoRef.current.value = '';\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={cx(styles['signup-form'])}>\r\n      <Form onSubmit={e => handleSubmit(e)}>\r\n        <Form.Group className=\"mb-3\" controlId=\"nombre\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Repite tu contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={repeatPassword}\r\n            name=\"repeatPassword\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"nombre\">\r\n          <Form.Label>Nombre Completo</Form.Label>\r\n          <Form.Control\r\n            type=\"nombre\"\r\n            value={nombre}\r\n            name=\"nombre\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"direccion\">\r\n          <Form.Label>Dirección</Form.Label>\r\n          <Form.Control\r\n            type=\"direccion\"\r\n            value={direccion}\r\n            name=\"direccion\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"edad\">\r\n          <Form.Label>Edad</Form.Label>\r\n          <Form.Control\r\n            type=\"edad\"\r\n            value={edad}\r\n            name=\"edad\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"telefono\">\r\n          <Form.Label>Teléfono</Form.Label>\r\n          <PhoneInput\r\n            placeholder=\"Enter phone number\"\r\n            value={telefono}\r\n            name=\"telefono\"\r\n            onChange={setTelefono as (value?: unknown) => void}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"foto\" className=\"mb-3\">\r\n          <Form.Label>Foto</Form.Label>\r\n          <Form.Control type=\"file\" ref={fotoRef} name=\"foto\" />\r\n        </Form.Group>\r\n        <Button className=\"mb-2\" type=\"submit\">\r\n          Registrarse\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { IUserFormData, IObject } from 'commons/interfaces';\r\nimport SignupForm from 'components/SignupForm/SignupForm';\r\nimport { userLogin, userSignUp } from 'features/user/userSlice';\r\nimport { useAppDispatch } from 'hooks/redux';\r\n\r\nconst Signup = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (data: IUserFormData, callback: () => void) => {\r\n    try {\r\n      await dispatch(userSignUp(data)).unwrap();\r\n      callback();\r\n      toast.success('¡Registro Exitoso!');\r\n\r\n      const dataObj: IObject = {};\r\n      data.forEach((value, key) => (dataObj[key] = value));\r\n\r\n      const loginData = {\r\n        email: dataObj.email as string,\r\n        password: dataObj.password as string,\r\n      };\r\n\r\n      await dispatch(userLogin(loginData)).unwrap();\r\n      history.push('/dashboard');\r\n    } catch (e) {\r\n      const message =\r\n        e.message === 'Missing credentials'\r\n          ? 'Todos los campos son obligatorios'\r\n          : e.message;\r\n      toast.error(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center mt-5 pt-3\">Registro de Usuario</h1>\r\n      <SignupForm onSubmit={handleSubmit} />\r\n      <hr />\r\n      <div>\r\n        <span>¿Ya tienes cuenta?</span>\r\n        <Link className=\"btn btn-primary ms-2\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import axios from 'axios';\r\nimport { IItem, IItemQuery } from '../commons/interfaces';\r\n\r\nconst baseUrl = '/api/productos';\r\n\r\nexport const getProducts = async (query?: IItemQuery) => {\r\n  try {\r\n    let queryString = '';\r\n    if (query) {\r\n      queryString = '?';\r\n      const queryArray = Object.entries(query);\r\n      queryArray.forEach((queryValues, index) => {\r\n        queryString += `${queryValues[0]}=${queryValues[1]}${\r\n          index !== queryArray.length - 1 ? '&' : ''\r\n        }`;\r\n      });\r\n    } else {\r\n      queryString = '';\r\n    }\r\n    const response = await axios.get(`${baseUrl}${queryString}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const saveProduct = async (newProduct: IItem) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}`, newProduct);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id: string, product: IItem) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/${id}`, product);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IItem, IItemAPI, IItemQuery } from 'commons/interfaces';\r\nimport {\r\n  deleteProduct,\r\n  getProducts,\r\n  saveProduct,\r\n  updateProduct,\r\n} from 'services/Productos';\r\n\r\ninterface ProductsState {\r\n  data: IItemAPI[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: ProductsState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  'products/fetchProducts',\r\n  async (query?: IItemQuery) => {\r\n    const response = await getProducts(query);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const addNewProduct = createAsyncThunk(\r\n  'products/addNewProduct',\r\n  // The payload creator receives the partial product object\r\n  async (product: IItem) => {\r\n    // We send the initial data to the server\r\n    const response = await saveProduct(product);\r\n    // The response includes the complete post object, including unique ID\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const editProduct = createAsyncThunk(\r\n  'products/editProduct',\r\n  async (productData: { id: string; product: IItemAPI }) => {\r\n    const { id, product } = productData;\r\n    const response = await updateProduct(id, product);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const removeProductApi = createAsyncThunk(\r\n  'products/removeProduct',\r\n  async (productId: string) => {\r\n    const response = await deleteProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {\r\n    removeProduct: (state, action) => {\r\n      state.data = state.data.filter(item => item.id !== action.payload);\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        // Add any fetched products to the array\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(addNewProduct.fulfilled, (state, action) => {\r\n        // We can directly add the new product object to our products array\r\n        state.data.push(action.payload);\r\n      })\r\n      .addCase(editProduct.fulfilled, (state, action) => {\r\n        const productToUpdateIndex = state.data\r\n          .map((item: IItemAPI) => item.id)\r\n          .indexOf(action.payload.id);\r\n        state.data.splice(productToUpdateIndex, 1, action.payload);\r\n      });\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { removeProduct } = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Spinner } from 'react-bootstrap';\r\nimport { IItem, IItemAPI } from 'commons/interfaces';\r\n\r\ninterface IProductForm {\r\n  handleSaveProduct: (\r\n    formValues: IItem | IItemAPI,\r\n    callback: () => void,\r\n  ) => void;\r\n  addRequestStatus: 'idle' | 'loading';\r\n}\r\n\r\nconst ProductForm = ({ handleSaveProduct, addRequestStatus }: IProductForm) => {\r\n  const [formValues, setFormValues] = useState({\r\n    codigo: '',\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: '',\r\n    stock: '',\r\n    foto: '',\r\n  });\r\n  const { codigo, nombre, descripcion, precio, stock, foto } = formValues;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    handleSaveProduct(formValues, () => {\r\n      setFormValues({\r\n        codigo: '',\r\n        nombre: '',\r\n        descripcion: '',\r\n        precio: '',\r\n        stock: '',\r\n        foto: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"codigo\">\r\n          <Form.Label>Código</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={codigo}\r\n            name=\"codigo\"\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            Debe tener el siguiente formato: ECOM-xxxx-xxx, donde 'x'\r\n            corresponde a números\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"nombre\">\r\n          <Form.Label>Nombre</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={nombre}\r\n            name=\"nombre\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"descripcion\">\r\n          <Form.Label>Descripción</Form.Label>\r\n          <Form.Control\r\n            type=\"textarea\"\r\n            value={descripcion}\r\n            name=\"descripcion\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"precio\">\r\n          <Form.Label>Precio</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={precio}\r\n            name=\"precio\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"stock\">\r\n          <Form.Label>Stock</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={stock}\r\n            name=\"stock\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"foto\">\r\n          <Form.Label>URL de imagen</Form.Label>\r\n          <Form.Control\r\n            type=\"url\"\r\n            value={foto}\r\n            name=\"foto\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          className=\"mb-2\"\r\n          onClick={handleSubmit}\r\n          disabled={addRequestStatus === 'loading'}\r\n        >\r\n          Guardar{' '}\r\n          {addRequestStatus === 'loading' && (\r\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\r\n          )}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import { useState } from 'react';\r\nimport { IItem } from 'commons/interfaces';\r\nimport { addNewProduct } from 'features/products/productsSlice';\r\nimport { useAppDispatch } from 'hooks/redux';\r\nimport { toast } from 'react-toastify';\r\nimport ProductForm from 'components/ProductForm/ProductForm';\r\n\r\nconst AddProduct = () => {\r\n  const [addRequestStatus, setAddRequestStatus] = useState<'idle' | 'loading'>(\r\n    'idle',\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSaveProduct = async (formValues: IItem, callback: () => void) => {\r\n    try {\r\n      setAddRequestStatus('loading');\r\n      await dispatch(addNewProduct(formValues)).unwrap();\r\n      callback();\r\n      toast.success('El producto fue agregado con éxito');\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    } finally {\r\n      setAddRequestStatus('idle');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-5 pt-3\">Agrega un producto</h1>\r\n      <ProductForm\r\n        handleSaveProduct={handleSaveProduct}\r\n        addRequestStatus={addRequestStatus}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/carrito';\r\n\r\nexport const getCarritoProducts = async () => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const saveCarritoProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const editCarritoProduct = async (productData: {\r\n  productId: string;\r\n  amount: string | number;\r\n}) => {\r\n  try {\r\n    const response = await axios.put(`${baseUrl}`, productData);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n\r\nexport const deleteCarritoProduct = async (id: string) => {\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${id}`);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw new Error(e.response.data.message);\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'api/ordenes';\r\n\r\nexport const sendOrder = async () => {\r\n  try {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data.data;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IItemCarrito } from 'commons/interfaces';\r\nimport {\r\n  getCarritoProducts,\r\n  saveCarritoProduct,\r\n  editCarritoProduct,\r\n  deleteCarritoProduct,\r\n} from 'services/Carrito';\r\nimport { sendOrder } from 'services/Orders';\r\n\r\ninterface CartState {\r\n  data: IItemCarrito[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null | undefined;\r\n}\r\n\r\nconst initialState: CartState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchProductsCart = createAsyncThunk(\r\n  'cart/fetchProductsCart',\r\n  async () => {\r\n    const response = await getCarritoProducts();\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const addProductToCart = createAsyncThunk(\r\n  'cart/addProductToCart',\r\n  async (productId: string) => {\r\n    const response = await saveCarritoProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const editProductInCart = createAsyncThunk(\r\n  'cart/editProductInCart',\r\n  async (productData: { productId: string; amount: string | number }) => {\r\n    const response = await editCarritoProduct(productData);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const removeProductCart = createAsyncThunk(\r\n  'cart/removeProductCart',\r\n  async (productId: string) => {\r\n    const response = await deleteCarritoProduct(productId);\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const sendCartOrder = createAsyncThunk(\r\n  'cart/sendCartOrder',\r\n  async () => {\r\n    const response = await sendOrder();\r\n    return response;\r\n  },\r\n);\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    emptyCart(state) {\r\n      state.data = [];\r\n      state.status = 'idle';\r\n      state.error = 'null';\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchProductsCart.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductsCart.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = state.data.concat(action.payload);\r\n      })\r\n      .addCase(fetchProductsCart.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(removeProductCart.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(addProductToCart.fulfilled, (state, action) => {\r\n        const productIndex = state.data.findIndex(\r\n          item => item.producto.id === action.payload.producto.id,\r\n        );\r\n        if (productIndex === -1) {\r\n          state.data = state.data.concat(action.payload);\r\n        } else {\r\n          state.data[productIndex].quantity = action.payload.quantity;\r\n        }\r\n        state.status = 'succeeded';\r\n        state.error = null;\r\n      })\r\n      .addCase(editProductInCart.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(sendCartOrder.fulfilled, state => {\r\n        state.data = [];\r\n      });\r\n  },\r\n});\r\n\r\nexport const { emptyCart } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n","import { IObject } from 'commons/interfaces';\r\n\r\n/**\r\n * Checks if an item (string, number, array, object) is empty or not\r\n * @param item\r\n * @returns returns true if empty, or false if not\r\n */\r\n\r\nexport function isEmpty(item: any) {\r\n  if (!!item) {\r\n    switch (typeof item) {\r\n      case 'string':\r\n        if (item !== '' && item !== 'null' && item !== 'undefined') {\r\n          return false;\r\n        }\r\n        return true;\r\n      case 'number':\r\n        return false;\r\n      case 'object':\r\n        if (JSON.stringify(item) === '{}' || JSON.stringify(item) === '[]') {\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get cookie value by name\r\n * @param cookieName name of the cookie to look for\r\n * @returns cookie value\r\n */\r\nexport function getCookie(cookieName: string) {\r\n  let cookie: IObject = {};\r\n  document.cookie.split(';').forEach(function (el) {\r\n    let [key, value] = el.split('=');\r\n    cookie[key.trim()] = value;\r\n  });\r\n  return cookie[cookieName];\r\n}\r\n\r\n/**\r\n *\r\n * @param object\r\n * @returns the object properties that are empty\r\n */\r\nexport const getEmptyFields = (object: IObject): unknown[] => {\r\n  const keysValues = Object.entries(object);\r\n  const empty: unknown[] = [];\r\n\r\n  keysValues.forEach(item => {\r\n    if (isEmpty(item[1])) {\r\n      empty.push(item[0]);\r\n    }\r\n  });\r\n\r\n  return empty;\r\n};\r\n\r\n/**\r\n * Make a copy of an object\r\n * @param obj object to copy\r\n * @returns copy if the object\r\n */\r\nexport const copyObj = (obj: IObject) => {\r\n  return JSON.parse(JSON.stringify(obj));\r\n};\r\n","import { Button, Card } from 'react-bootstrap';\r\nimport { IItemAPI } from 'commons/interfaces';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  product: IItemAPI;\r\n  handleToggleShowModal: (\r\n    producto?: IItemAPI,\r\n    action?: 'edit' | 'delete',\r\n  ) => void;\r\n  handleAddToCart: (producto: IItemAPI) => void;\r\n}\r\n\r\nconst Product = ({\r\n  product,\r\n  handleToggleShowModal,\r\n  handleAddToCart,\r\n}: IProps) => {\r\n  return (\r\n    <Card>\r\n      <Card.Img variant=\"top\" src={`${product.foto}`} />\r\n      <Card.Body>\r\n        <div>\r\n          <Card.Title>{product.nombre}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            ${product.precio}\r\n          </Card.Subtitle>\r\n          <Card.Text>{product.descripcion}</Card.Text>\r\n        </div>\r\n        <div className=\"text-end mt-2\">\r\n          <Card.Text>\r\n            <small>{product.codigo}</small>\r\n          </Card.Text>\r\n        </div>\r\n        <div className={cx('d-flex', 'flex-column', styles['product-btns'])}>\r\n          <div className={cx('d-flex', 'mt-2', styles['product-add-edit'])}>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => handleToggleShowModal(product, 'delete')}\r\n            >\r\n              Eliminar\r\n            </Button>\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={() => handleToggleShowModal(product, 'edit')}\r\n            >\r\n              Editar\r\n            </Button>\r\n          </div>\r\n          <Button variant=\"primary\" onClick={() => handleAddToCart(product)}>\r\n            Agregar al carrito\r\n          </Button>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport { IItemCarrito } from 'commons/interfaces';\r\nimport { useAppDispatch } from 'hooks/redux';\r\nimport { editProductInCart } from 'features/cart/cartSlice';\r\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IProductCarrito {\r\n  product: IItemCarrito;\r\n  handleRemove: (id: string) => void;\r\n}\r\n\r\nconst ProductCarrito = ({ product, handleRemove }: IProductCarrito) => {\r\n  const [qtyDisabled, setQtyDisabled] = useState(true);\r\n  const [quantity, setQuantity] = useState<number | string>(product.quantity);\r\n  const [editProductRequestStatus, setEditProductRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n\r\n  const { producto } = product;\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleEdit = () => {\r\n    setQtyDisabled(false);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuantity(e.target.value);\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      setEditProductRequestStatus('loading');\r\n      disableBodyScroll(document.body);\r\n      await dispatch(\r\n        editProductInCart({ productId: producto.id, amount: quantity }),\r\n      ).unwrap();\r\n      setQtyDisabled(true);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    } finally {\r\n      setEditProductRequestStatus('idle');\r\n      enableBodyScroll(document.body);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {editProductRequestStatus === 'loading' && (\r\n        <LoadingScreen\r\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\r\n        />\r\n      )}\r\n      <div\r\n        className={cx('border', 'rounded', 'd-flex', styles['product-carrito'])}\r\n      >\r\n        <img\r\n          src={producto.foto}\r\n          alt={producto.nombre}\r\n          className={cx(styles['product-carrito__img'])}\r\n        />\r\n        <div className={cx(styles['product-carrito__info-container'])}>\r\n          <div className={cx(styles['product-carrito__info'])}>\r\n            <h3>{producto.nombre}</h3>\r\n            <p>{producto.descripcion}</p>\r\n            <div className={cx(styles['product-carrito__qty-price'])}>\r\n              <div className={cx(styles['product-carrito__qty-form'])}>\r\n                <Form>\r\n                  <Form.Group\r\n                    className={cx(\r\n                      'mb-3',\r\n                      'd-flex',\r\n                      'align-items-center',\r\n                      'gap-2',\r\n                    )}\r\n                    controlId=\"nombre\"\r\n                  >\r\n                    <Form.Label>Cantidad</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={quantity}\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      disabled={qtyDisabled}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n              <p className={cx(styles['product-carrito__price'])}>\r\n                ${Number(producto.precio) * product.quantity}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className={cx(styles['product-carrito__btns'])}>\r\n            <Button variant=\"danger\" onClick={() => handleRemove(producto.id)}>\r\n              Eliminar\r\n            </Button>\r\n            <Button\r\n              variant={qtyDisabled ? 'primary' : 'success'}\r\n              onClick={\r\n                qtyDisabled ? () => handleEdit() : () => handleSaveChanges()\r\n              }\r\n            >\r\n              {qtyDisabled ? 'Editar' : 'Guardar'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCarrito;\r\n","import { IItemAPI, IItemCarrito } from 'commons/interfaces';\r\nimport { isEmpty } from 'utilities/others';\r\nimport Product from 'components/Product/Product';\r\nimport ProductCarrito from 'components/ProductCarrito/ProductCarrito';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IProductList {\r\n  productos: IItemAPI[] | IItemCarrito[] | [];\r\n  handleToggleShowModal?: (\r\n    producto?: IItemAPI,\r\n    action?: 'edit' | 'delete',\r\n  ) => void;\r\n  handleAddToCart?: (producto: IItemAPI) => void;\r\n  location: 'home' | 'cart';\r\n  handleRemove?: (id: string) => void;\r\n}\r\n\r\nconst ProductList = ({\r\n  handleToggleShowModal,\r\n  productos,\r\n  location,\r\n  handleRemove,\r\n  handleAddToCart,\r\n}: IProductList) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={cx(\r\n          styles['product-list'],\r\n          'my-4',\r\n          'd-flex',\r\n          'flex-wrap',\r\n          'justify-content-center',\r\n          { 'flex-column': location === 'cart' },\r\n        )}\r\n      >\r\n        {!isEmpty(productos) &&\r\n          location === 'home' &&\r\n          handleToggleShowModal &&\r\n          handleAddToCart &&\r\n          (productos as IItemAPI[]).map((producto: IItemAPI) => (\r\n            <Product\r\n              key={producto.id}\r\n              product={producto}\r\n              handleToggleShowModal={handleToggleShowModal}\r\n              handleAddToCart={handleAddToCart}\r\n            />\r\n          ))}\r\n        {!isEmpty(productos) &&\r\n          location === 'cart' &&\r\n          handleRemove &&\r\n          (productos as IItemCarrito[]).map((producto: IItemCarrito) => (\r\n            <ProductCarrito\r\n              key={producto.producto.id}\r\n              product={producto}\r\n              handleRemove={handleRemove}\r\n            />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\r\nimport {\r\n  fetchProductsCart,\r\n  removeProductCart,\r\n  sendCartOrder,\r\n} from 'features/cart/cartSlice';\r\nimport { isEmpty } from 'utilities/others';\r\nimport ProductList from 'components/ProductList/ProductList';\r\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Cart = () => {\r\n  const [total, setTotal] = useState(0);\r\n  const [deleteProductRequestStatus, setDeleteProductRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n  const [sendOrderRequestStatus, setSendOrderRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n\r\n  const { data, status, error } = useAppSelector(state => state.cart);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleRemove = async (id: string) => {\r\n    try {\r\n      setDeleteProductRequestStatus('loading');\r\n      disableBodyScroll(document.body);\r\n      await dispatch(removeProductCart(id)).unwrap();\r\n      toast.success('Producto eliminado del carrito');\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    } finally {\r\n      setDeleteProductRequestStatus('idle');\r\n      enableBodyScroll(document.body);\r\n    }\r\n  };\r\n\r\n  const handleSendOrder = async () => {\r\n    try {\r\n      setSendOrderRequestStatus('loading');\r\n      const response = await dispatch(sendCartOrder()).unwrap();\r\n      toast.success(response);\r\n    } catch (e) {\r\n      toast.error(\r\n        'Hubo un error enviando la orden, por favor intente de nuevo.',\r\n      );\r\n    } finally {\r\n      setSendOrderRequestStatus('idle');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchProductsCart());\r\n    }\r\n    if (status === 'failed') {\r\n      toast.error(error || 'Ocurrió un error');\r\n    }\r\n  }, [dispatch, status, error]);\r\n\r\n  useEffect(() => {\r\n    const totalCost = data.reduce((total, item) => {\r\n      return (total += Number(item.producto.precio) * item.quantity);\r\n    }, 0);\r\n    setTotal(totalCost);\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-5 pt-3 mb-\">Carrito</h1>\r\n      <ProductList\r\n        productos={data}\r\n        location=\"cart\"\r\n        handleRemove={handleRemove}\r\n      />\r\n      {isEmpty(data) ? (\r\n        status === 'loading' ? (\r\n          <div className={cx(styles['spinner-container'])}>\r\n            <Spinner animation=\"grow\" variant=\"primary\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center\">\r\n            <h2>El carrito está vacío</h2>\r\n            <p className=\"display-6\">Agrega algunos productos</p>\r\n            <Link to=\"/productos\" className=\"btn btn-primary\">\r\n              Ir a Productos\r\n            </Link>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div className=\"d-flex justify-content-end gap-3 align-items-center\">\r\n          <div className=\"border rounded p-3\">\r\n            <span className=\"fw-bold\">Total:</span> ${total.toFixed(2)}\r\n          </div>\r\n          <Button variant=\"primary\" size=\"lg\" onClick={handleSendOrder}>\r\n            Enviar orden\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {(deleteProductRequestStatus === 'loading' ||\r\n        sendOrderRequestStatus === 'loading') && (\r\n        <LoadingScreen\r\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { IItemAPI } from 'commons/interfaces';\r\n\r\ninterface IConfirmationModal {\r\n  productToDelete: IItemAPI | null;\r\n  handleToggleShowModal: () => void;\r\n  handleConfirmDelete: () => void;\r\n  deleteRequestStatus: 'idle' | 'loading';\r\n}\r\n\r\nconst ConfirmationModal = ({\r\n  handleToggleShowModal,\r\n  productToDelete,\r\n  handleConfirmDelete,\r\n  deleteRequestStatus,\r\n}: IConfirmationModal) => {\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title>¿Estas seguro?</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        ¿Seguro que quieres eliminar {productToDelete?.nombre}?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={() => handleToggleShowModal()}\r\n          disabled={deleteRequestStatus === 'loading'}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={handleConfirmDelete}\r\n          disabled={deleteRequestStatus === 'loading'}\r\n        >\r\n          Eliminar{' '}\r\n          {deleteRequestStatus === 'loading' && (\r\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\r\n          )}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useState } from 'react';\r\nimport { IItemAPI } from 'commons/interfaces';\r\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\r\n\r\ninterface IEditModal {\r\n  handleConfirmEdit: (formValues: IItemAPI, callback: () => void) => void;\r\n  productToEdit: IItemAPI;\r\n  handleToggleShowModal: () => void;\r\n  editRequestStatus: 'idle' | 'loading';\r\n}\r\n\r\nconst EditModal = ({\r\n  handleToggleShowModal,\r\n  productToEdit,\r\n  handleConfirmEdit,\r\n  editRequestStatus,\r\n}: IEditModal) => {\r\n  const [formValues, setFormValues] = useState({\r\n    codigo: productToEdit.codigo,\r\n    nombre: productToEdit.nombre,\r\n    descripcion: productToEdit.descripcion,\r\n    precio: productToEdit.precio,\r\n    stock: productToEdit.stock,\r\n    foto: productToEdit.foto,\r\n  });\r\n  const { codigo, nombre, descripcion, precio, stock, foto } = formValues;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const editedProduct = {\r\n      ...productToEdit,\r\n      ...formValues,\r\n    };\r\n    handleConfirmEdit(editedProduct, () => {\r\n      setFormValues({\r\n        codigo: '',\r\n        nombre: '',\r\n        descripcion: '',\r\n        precio: '',\r\n        stock: '',\r\n        foto: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title>Editar producto</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"codigo\">\r\n            <Form.Label>Código</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={codigo}\r\n              name=\"codigo\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"nombre\">\r\n            <Form.Label>Nombre</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={nombre}\r\n              name=\"nombre\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"descripcion\">\r\n            <Form.Label>Descripción</Form.Label>\r\n            <Form.Control\r\n              type=\"textarea\"\r\n              value={descripcion}\r\n              name=\"descripcion\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"precio\">\r\n            <Form.Label>Precio</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={precio}\r\n              name=\"precio\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"stock\">\r\n            <Form.Label>Stock</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={stock}\r\n              name=\"stock\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"foto\">\r\n            <Form.Label>URL de imagen</Form.Label>\r\n            <Form.Control\r\n              type=\"url\"\r\n              value={foto}\r\n              name=\"foto\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={() => handleToggleShowModal()}\r\n          disabled={editRequestStatus === 'loading'}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={handleSubmit}\r\n          disabled={editRequestStatus === 'loading'}\r\n        >\r\n          Editar{' '}\r\n          {editRequestStatus === 'loading' && (\r\n            <Spinner animation=\"border\" size=\"sm\" variant=\"light\" />\r\n          )}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import { useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useAppDispatch } from 'hooks/redux';\r\nimport { fetchProducts } from 'features/products/productsSlice';\r\nimport { copyObj } from 'utilities/others';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Filter = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    nombre: '',\r\n    codigo: '',\r\n    minPrice: '',\r\n    maxPrice: '',\r\n    minStock: '',\r\n    maxStock: '',\r\n  });\r\n\r\n  // const { data, status, error } = useAppSelector(state => state.products);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { nombre, codigo, minPrice, maxPrice, minStock, maxStock } = formValues;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formValuesCopy = copyObj(formValues);\r\n    const notEmptyFields = Object.entries(formValuesCopy).filter(\r\n      item => item[1] !== '',\r\n    );\r\n\r\n    dispatch(fetchProducts(Object.fromEntries(notEmptyFields)));\r\n  };\r\n\r\n  return (\r\n    <div className={cx(styles['filter-container'])}>\r\n      <h2 className=\"text-center mt-4\">Filtra tu búsqueda</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"nombre\"\r\n                type=\"text\"\r\n                value={nombre}\r\n                onChange={handleChange}\r\n                name=\"nombre\"\r\n                placeholder=\"Nombre\"\r\n              />\r\n              <label htmlFor=\"nombre\">Nombre</label>\r\n            </Form.Floating>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"codigo\"\r\n                type=\"text\"\r\n                value={codigo}\r\n                onChange={handleChange}\r\n                name=\"codigo\"\r\n                placeholder=\"Código\"\r\n              />\r\n              <label htmlFor=\"codigo\">Código</label>\r\n            </Form.Floating>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"minPrice\"\r\n                type=\"text\"\r\n                value={minPrice}\r\n                onChange={handleChange}\r\n                name=\"minPrice\"\r\n                placeholder=\"Precio Mínimo\"\r\n              />\r\n              <label htmlFor=\"minPrice\">Precio Mínimo</label>\r\n            </Form.Floating>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"maxPrice\"\r\n                type=\"text\"\r\n                value={maxPrice}\r\n                onChange={handleChange}\r\n                name=\"maxPrice\"\r\n                placeholder=\"Precio Máximo\"\r\n              />\r\n              <label htmlFor=\"maxPrice\">Precio Máximo</label>\r\n            </Form.Floating>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"minStock\"\r\n                type=\"text\"\r\n                value={minStock}\r\n                onChange={handleChange}\r\n                name=\"minStock\"\r\n                placeholder=\"Stock Mínimo\"\r\n              />\r\n              <label htmlFor=\"minStock\">Stock Mínimo</label>\r\n            </Form.Floating>\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n            <Form.Floating>\r\n              <Form.Control\r\n                id=\"maxStock\"\r\n                type=\"text\"\r\n                value={maxStock}\r\n                onChange={handleChange}\r\n                name=\"maxStock\"\r\n                placeholder=\"Stock Máximo\"\r\n              />\r\n              <label htmlFor=\"maxStock\">Stock Máximo</label>\r\n            </Form.Floating>\r\n          </Col>\r\n        </Row>\r\n        <Button type=\"submit\">Buscar</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport { Modal, Spinner } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport { IItemAPI } from 'commons/interfaces';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\r\nimport {\r\n  fetchProducts,\r\n  editProduct,\r\n  removeProductApi,\r\n  removeProduct,\r\n} from 'features/products/productsSlice';\r\nimport { addProductToCart } from 'features/cart/cartSlice';\r\nimport ConfirmationModal from 'components/Modals/ConfirmationModal/ConfirmationModal';\r\nimport ProductList from 'components/ProductList/ProductList';\r\nimport EditModal from 'components/Modals/EditModal/EditModal';\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\r\nimport Filter from 'components/Filter/Filter';\r\nimport { isEmpty } from 'utilities/others';\r\n\r\nconst Productos = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [productToDelete, setProductToDelete] = useState<IItemAPI | null>(null);\r\n  const [productToEdit, setProductToEdit] = useState<IItemAPI | null>(null);\r\n  const [deleteRequestStatus, setDeleteRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n  const [editRequestStatus, setEditRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n  const [addToCartRequestStatus, setAddToCartRequestStatus] = useState<\r\n    'idle' | 'loading'\r\n  >('idle');\r\n\r\n  const { data, status, error } = useAppSelector(state => state.products);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleToggleShowModal = (\r\n    producto?: IItemAPI,\r\n    action?: 'edit' | 'delete',\r\n  ) => {\r\n    if (producto && action === 'delete') {\r\n      setProductToDelete(producto);\r\n      setProductToEdit(null);\r\n    }\r\n    if (producto && action === 'edit') {\r\n      setProductToEdit(producto);\r\n      setProductToDelete(null);\r\n    }\r\n    setShowModal(prevState => !prevState);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (productToDelete) {\r\n      try {\r\n        setDeleteRequestStatus('loading');\r\n        await dispatch(removeProductApi(productToDelete.id)).unwrap();\r\n        dispatch(removeProduct(productToDelete.id));\r\n        handleToggleShowModal();\r\n        toast.success(`${productToDelete.nombre} eliminado con éxito`);\r\n        setTimeout(() => {\r\n          // since the modal only shows if there's a product to edit in productToDelete state, this setTimeout is to wait for the modal to do the closing animation before setting the productToDelete state to null, otherwise the modal will dissappear abruptly\r\n          setProductToDelete(null);\r\n        }, 1000);\r\n      } catch (e) {\r\n        toast.error(e.message);\r\n      } finally {\r\n        setDeleteRequestStatus('idle');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmEdit = async (\r\n    formValues: IItemAPI,\r\n    callback: () => void,\r\n  ) => {\r\n    const { id } = formValues;\r\n    if (productToEdit) {\r\n      try {\r\n        setEditRequestStatus('loading');\r\n        await dispatch(editProduct({ id, product: formValues })).unwrap();\r\n        callback();\r\n        handleToggleShowModal();\r\n        toast.success(`${productToEdit.nombre} editado con éxito`);\r\n        setTimeout(() => {\r\n          // same case than for productToDelete\r\n          setProductToEdit(null);\r\n        }, 1000);\r\n      } catch (e) {\r\n        toast.error(e.message);\r\n      } finally {\r\n        setEditRequestStatus('idle');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (producto: IItemAPI) => {\r\n    try {\r\n      setAddToCartRequestStatus('loading');\r\n      disableBodyScroll(document.body);\r\n      await dispatch(addProductToCart(producto.id)).unwrap();\r\n      toast.success(`${producto.nombre} agregado al carrito`);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    } finally {\r\n      setAddToCartRequestStatus('idle');\r\n      enableBodyScroll(document.body);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchProducts());\r\n    } else if (status === 'failed') {\r\n      toast.error(error);\r\n    }\r\n  }, [status, dispatch, error]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-5 pt-4\">Productos</h1>\r\n      <Filter />\r\n      {status === 'loading' && (\r\n        <div className={cx(styles['spinner-container'])}>\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n        </div>\r\n      )}\r\n      {status !== 'loading' && !isEmpty(data) ? (\r\n        <ProductList\r\n          location=\"home\"\r\n          productos={data}\r\n          handleToggleShowModal={handleToggleShowModal}\r\n          handleAddToCart={handleAddToCart}\r\n        />\r\n      ) : (\r\n        <div className=\"text-center mt-4\">\r\n          <h2>\r\n            No se encontraron productos, intenta con otros parámetros de\r\n            búsqueda\r\n          </h2>\r\n        </div>\r\n      )}\r\n      <Modal show={showModal} onHide={() => handleToggleShowModal()}>\r\n        {productToDelete && (\r\n          <ConfirmationModal\r\n            productToDelete={productToDelete}\r\n            handleConfirmDelete={handleConfirmDelete}\r\n            handleToggleShowModal={handleToggleShowModal}\r\n            deleteRequestStatus={deleteRequestStatus}\r\n          />\r\n        )}\r\n        {productToEdit && (\r\n          <EditModal\r\n            productToEdit={productToEdit}\r\n            handleConfirmEdit={handleConfirmEdit}\r\n            handleToggleShowModal={handleToggleShowModal}\r\n            editRequestStatus={editRequestStatus}\r\n          />\r\n        )}\r\n      </Modal>\r\n      {addToCartRequestStatus === 'loading' && (\r\n        <LoadingScreen\r\n          style={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', zIndex: 2000 }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Productos;\r\n","import { useState } from 'react';\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport { userLogout } from 'features/user/userSlice';\r\nimport { emptyCart } from 'features/cart/cartSlice';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\r\n\r\nimport cx from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Dashboard = () => {\r\n  const [logoutError, setLogoutError] = useState('');\r\n\r\n  const { data, status, error } = useAppSelector(state => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await dispatch(userLogout()).unwrap();\r\n      dispatch(emptyCart());\r\n    } catch (e) {\r\n      setLogoutError('Hubo un error, por favor intente de nuevo.');\r\n      setTimeout(() => {\r\n        setLogoutError('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center mt-5 pt-4\">Dashboard</h1>\r\n      {error && (\r\n        <Alert variant=\"danger\">\r\n          <span className=\"me-3\">{logoutError}</span>\r\n        </Alert>\r\n      )}\r\n      <Alert variant=\"success\">\r\n        <div className=\"text-center\">\r\n          <span className=\"me-3 fw-bold\">Bienvenido/a {data?.nombre}</span>\r\n        </div>\r\n      </Alert>\r\n      <div className={cx(styles['user-data-container'])}>\r\n        <div className={cx(styles['user-data'])}>\r\n          <img\r\n            src={data?.foto}\r\n            alt={`foto ${data?.nombre}`}\r\n            className={cx(styles['user-data__img'])}\r\n          />\r\n          <div className={cx(styles['user-data__info'])}>\r\n            <span>\r\n              <span className=\"fw-bold\">Email:</span> {data?.email}\r\n            </span>\r\n            <span>\r\n              <span className=\"fw-bold\">Direccion:</span> {data?.direccion}\r\n            </span>\r\n            <span>\r\n              <span className=\"fw-bold\">Edad:</span> {data?.edad}\r\n            </span>\r\n            <span>\r\n              <span className=\"fw-bold\">Teléfono:</span> {data?.telefono}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          onClick={status === 'loading' ? undefined : handleLogout}\r\n          disabled={status === 'loading'}\r\n        >\r\n          {status === 'loading' ? 'Procesando...' : 'Logout'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport Login from 'pages/Login/Login';\r\nimport Signup from 'pages/Signup/Signup';\r\nimport AddProduct from 'pages/AddProduct/AddProduct';\r\nimport Cart from 'pages/Cart/Cart';\r\nimport Productos from 'pages/Productos/Productos';\r\nimport Dashboard from 'pages/Dashboard/Dashboard';\r\nimport { useAppSelector, useAppDispatch } from 'hooks/redux';\r\nimport { getUserData } from 'features/user/userSlice';\r\nimport { getCookie } from 'utilities/others';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst App = () => {\r\n  const { status, isLoggedIn } = useAppSelector(state => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isLoggedInCookie = getCookie('connect.sid');\r\n\r\n  useEffect(() => {\r\n    if (isLoggedInCookie && status === 'idle') {\r\n      const getUserInfo = async () => {\r\n        try {\r\n          await dispatch(getUserData()).unwrap();\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      };\r\n      getUserInfo();\r\n    }\r\n  }, [status, dispatch, isLoggedInCookie]);\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedInCookie && (status === 'idle' || status === 'loading') ? (\r\n        <LoadingScreen />\r\n      ) : (\r\n        <>\r\n          {isLoggedIn && <Navigation />}\r\n          <Container>\r\n            <Switch>\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route path=\"/add-product\">\r\n                {isLoggedIn ? <AddProduct /> : <Redirect to=\"/login\" />}\r\n              </Route>\r\n              <Route path=\"/cart\">\r\n                {isLoggedIn ? <Cart /> : <Redirect to=\"/login\" />}\r\n              </Route>\r\n              <Route path=\"/productos\">\r\n                {isLoggedIn ? <Productos /> : <Redirect to=\"/login\" />}\r\n              </Route>\r\n              <Route path=\"/\">\r\n                {isLoggedIn ? <Dashboard /> : <Redirect to=\"/login\" />}\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n        </>\r\n      )}\r\n      <ToastContainer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport productsReducer from \"features/products/productsSlice\";\r\nimport cartReducer from \"features/cart/cartSlice\";\r\nimport userReducer from \"features/user/userSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {products: ProductsState }\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from 'store';\r\nimport { Provider } from 'react-redux';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-phone-number-input/style.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-carrito\":\"styles_product-carrito__w9h_z\",\"product-carrito__img\":\"styles_product-carrito__img__3lOp8\",\"product-carrito__info-container\":\"styles_product-carrito__info-container__xkUfY\",\"product-carrito__info\":\"styles_product-carrito__info__3cczg\",\"product-carrito__qty-price\":\"styles_product-carrito__qty-price__3TmcJ\",\"product-carrito__qty-form\":\"styles_product-carrito__qty-form__1O6EU\",\"product-carrito__btns\":\"styles_product-carrito__btns__2Oedl\",\"product-carrito__price\":\"styles_product-carrito__price__3CqFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-data-container\":\"styles_user-data-container__1uE-6\",\"user-data\":\"styles_user-data__1vxLo\",\"user-data__img\":\"styles_user-data__img__1liEm\",\"user-data__info\":\"styles_user-data__info__2w3SR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-btns\":\"styles_product-btns__KMiLf\",\"product-add-edit\":\"styles_product-add-edit__3EXs6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-screen\":\"styles_loading-screen__LPC8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-icon\":\"styles_cart-icon__Preeq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup-form\":\"styles_signup-form__1eRgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product-list\":\"styles_product-list__1ieW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner-container\":\"styles_spinner-container__1T7VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner-container\":\"styles_spinner-container__ZMR1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter-container\":\"styles_filter-container__3qhrs\"};"],"sourceRoot":""}